{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"style\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar PortalContext = React.createContext(null);\nvar globalOverlayCounter = 0;\nexport function PortalProvider(props) {\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    items = _React$useState2[0],\n    setItems = _React$useState2[1];\n  var setOverlayItem = function setOverlayItem(element) {\n    var overlayId = ++globalOverlayCounter;\n    setItems(function (prev) {\n      return prev.concat([{\n        id: overlayId,\n        node: element\n      }]);\n    });\n    return overlayId;\n  };\n  var updateOverlayItem = function updateOverlayItem(id, node) {\n    setItems(function (prev) {\n      var overlayItem = prev.find(function (item) {\n        return item.id == id;\n      });\n      if (!overlayItem) {\n        return prev.concat([{\n          id: id,\n          node: node\n        }]);\n      } else {\n        return prev.map(function (item) {\n          if (item.id === id) {\n            return {\n              id: id,\n              node: node\n            };\n          }\n          return item;\n        });\n      }\n    });\n  };\n  var removeOverlayItem = function removeOverlayItem(id) {\n    setItems(function (prev) {\n      var newItems = prev.filter(function (item) {\n        return item.id !== id;\n      });\n      return newItems;\n    });\n  };\n  return React.createElement(PortalContext.Provider, {\n    value: {\n      items: items,\n      setOverlayItem: setOverlayItem,\n      removeOverlayItem: removeOverlayItem,\n      updateOverlayItem: updateOverlayItem,\n      isSSR: props === null || props === void 0 ? void 0 : props.isSSR\n    }\n  }, props.children, items.map(function (item) {\n    return React.createElement(React.Fragment, {\n      key: item.id\n    }, item.node);\n  }));\n}\nfunction OverlayView(_ref) {\n  var style = _ref.style,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(View, _extends({\n    pointerEvents: \"box-none\",\n    style: [StyleSheet.absoluteFill, style],\n    collapsable: false\n  }, props));\n}\nexport var OverlayProvider = PortalProvider;\nexport function OverlayContainer(props) {\n  var context = usePortalProvider();\n  var overlayId = React.useRef(undefined);\n  var element = React.createElement(OverlayView, props);\n  useEffect(function () {\n    if (overlayId.current === undefined) {\n      overlayId.current = context === null || context === void 0 ? void 0 : context.setOverlayItem(element);\n    } else {\n      if (overlayId.current) {\n        context === null || context === void 0 || context.updateOverlayItem(overlayId.current, element);\n      }\n    }\n  }, [props]);\n  useEffect(function () {\n    return function () {\n      if (overlayId.current) {\n        context === null || context === void 0 || context.removeOverlayItem(overlayId.current);\n      }\n    };\n  }, []);\n  if (context !== null && context !== void 0 && context.isSSR && !overlayId.current) {\n    return React.createElement(View, {\n      style: {\n        display: 'none'\n      }\n    }, element);\n  }\n  return null;\n}\nfunction usePortalProvider() {\n  var context = React.useContext(PortalContext);\n  return context;\n}","map":{"version":3,"names":["React","useEffect","StyleSheet","View","PortalContext","createContext","globalOverlayCounter","PortalProvider","props","_React$useState","useState","_React$useState2","_slicedToArray","items","setItems","setOverlayItem","element","overlayId","prev","concat","id","node","updateOverlayItem","overlayItem","find","item","map","removeOverlayItem","newItems","filter","createElement","Provider","value","isSSR","children","Fragment","key","OverlayView","_ref","style","_objectWithoutProperties","_excluded","_extends","pointerEvents","absoluteFill","collapsable","OverlayProvider","OverlayContainer","context","usePortalProvider","useRef","undefined","current","display","useContext"],"sources":["C:\\JsonMobile\\frontend\\node_modules\\@react-native-aria\\overlays\\src\\Portal.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport type { ReactNode } from 'react';\r\nimport { StyleSheet, View, ViewProps } from 'react-native';\r\n\r\ntype OverlayItem = {\r\n  id: number;\r\n  node: ReactNode;\r\n};\r\n\r\ninterface PortalContext {\r\n  items: Array<OverlayItem>;\r\n  setOverlayItem: (node: ReactNode) => number;\r\n  removeOverlayItem: (id: number) => void;\r\n  updateOverlayItem: (id: number, node: ReactNode) => void;\r\n  isSSR?: boolean;\r\n}\r\n\r\ninterface ModalProviderProps extends ViewProps {\r\n  children: ReactNode;\r\n  provider?: boolean;\r\n}\r\n\r\nconst PortalContext = React.createContext<PortalContext | null>(null);\r\n\r\nlet globalOverlayCounter = 0;\r\n\r\nexport function PortalProvider(props: {\r\n  children: ReactNode;\r\n  isSSR?: boolean;\r\n}) {\r\n  const [items, setItems] = React.useState<Array<OverlayItem>>([]);\r\n\r\n  const setOverlayItem = (element: ReactNode) => {\r\n    const overlayId = ++globalOverlayCounter;\r\n    setItems((prev) => prev.concat([{ id: overlayId, node: element }]));\r\n    return overlayId;\r\n  };\r\n\r\n  const updateOverlayItem = (id: number, node: ReactNode) => {\r\n    setItems((prev) => {\r\n      const overlayItem = prev.find((item) => item.id == id);\r\n      if (!overlayItem) {\r\n        return prev.concat([{ id: id, node }]);\r\n      } else {\r\n        return prev.map((item) => {\r\n          if (item.id === id) {\r\n            return { id, node };\r\n          }\r\n\r\n          return item;\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeOverlayItem = (id: number) => {\r\n    setItems((prev) => {\r\n      const newItems = prev.filter((item) => item.id !== id);\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PortalContext.Provider\r\n      value={{\r\n        items,\r\n        setOverlayItem,\r\n        removeOverlayItem,\r\n        updateOverlayItem,\r\n        isSSR: props?.isSSR,\r\n      }}\r\n    >\r\n      {props.children}\r\n\r\n      {/* Render Overlays */}\r\n      {items.map((item) => {\r\n        return <React.Fragment key={item.id}>{item.node}</React.Fragment>;\r\n      })}\r\n    </PortalContext.Provider>\r\n  );\r\n}\r\n\r\nfunction OverlayView({ style, ...props }: ModalProviderProps) {\r\n  return (\r\n    <View\r\n      pointerEvents=\"box-none\"\r\n      style={[StyleSheet.absoluteFill, style]}\r\n      collapsable={false}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const OverlayProvider = PortalProvider;\r\n\r\nexport function OverlayContainer(props: ModalProviderProps) {\r\n  const context = usePortalProvider();\r\n  const overlayId = React.useRef<number | undefined>(undefined);\r\n  const element = <OverlayView {...props} />;\r\n\r\n  useEffect(\r\n    () => {\r\n      // Mount\r\n      if (overlayId.current === undefined) {\r\n        overlayId.current = context?.setOverlayItem(element);\r\n      }\r\n      // Update\r\n      else {\r\n        if (overlayId.current) {\r\n          context?.updateOverlayItem(overlayId.current, element);\r\n        }\r\n      }\r\n    },\r\n    // To re-render the child\r\n    [props]\r\n  );\r\n\r\n  // Unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (overlayId.current) {\r\n        context?.removeOverlayItem(overlayId.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Rendering elements for SSR\r\n  if (context?.isSSR && !overlayId.current) {\r\n    return <View style={{ display: 'none' }}>{element}</View>;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction usePortalProvider() {\r\n  const context = React.useContext(PortalContext);\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}