{"ast":null,"code":"var _jsxFileName = \"C:\\\\JsonMobile\\\\frontend\\\\Screens\\\\Product\\\\CategoryFilter.js\",\n  _this = this;\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Badge, Text, VStack, Divider, HStack } from 'native-base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CategoryFilter = function CategoryFilter(props) {\n  return _jsxDEV(ScrollView, {\n    bounces: true,\n    horizontal: true,\n    style: {\n      backgroundColor: \"#f2f2f2\"\n    },\n    children: _jsxDEV(VStack, {\n      space: 4,\n      divider: _jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 40\n      }, _this),\n      w: \"100%\",\n      children: _jsxDEV(HStack, {\n        justifyContent: \"space-between\",\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: function onPress() {\n            props.categoryFilter('all'), props.setActive(-1);\n          },\n          children: _jsxDEV(Badge, {\n            style: [styles.center, styles.badge, props.active === -1 ? styles.active : styles.inactive],\n            colorScheme: \"info\",\n            children: _jsxDEV(Text, {\n              style: styles.text,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, _this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, _this), props.categories.map(function (item) {\n          return _jsxDEV(TouchableOpacity, {\n            onPress: function onPress() {\n              props.categoryFilter(item._id), props.setActive(props.categories.indexOf(item));\n            },\n            children: _jsxDEV(Badge, {\n              style: [styles.center, styles.badge, props.active === props.categories.indexOf(item) ? styles.active : styles.inactive],\n              children: _jsxDEV(Text, {\n                style: styles.text,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, _this)\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  badge: {\n    margin: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 20\n  },\n  text: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  active: {\n    backgroundColor: '#664229'\n  },\n  inactive: {\n    backgroundColor: '#D2B48C'\n  }\n});\nexport default CategoryFilter;","map":{"version":3,"names":["React","StyleSheet","TouchableOpacity","ScrollView","Badge","Text","VStack","Divider","HStack","jsxDEV","_jsxDEV","CategoryFilter","props","bounces","horizontal","style","backgroundColor","children","space","divider","fileName","_jsxFileName","lineNumber","columnNumber","_this","w","justifyContent","onPress","categoryFilter","setActive","styles","center","badge","active","inactive","colorScheme","text","categories","map","item","_id","indexOf","name","create","alignItems","margin","paddingHorizontal","paddingVertical","borderRadius","color","fontSize","fontWeight"],"sources":["C:/JsonMobile/frontend/Screens/Product/CategoryFilter.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { Badge, Text, VStack, Divider, HStack } from 'native-base';\r\n\r\nconst CategoryFilter = (props) => {\r\n    return (\r\n        <ScrollView\r\n            bounces={true}\r\n            horizontal={true}\r\n            style={{ backgroundColor: \"#f2f2f2\" }}\r\n        >\r\n            <VStack space={4} divider={<Divider />} w=\"100%\">\r\n                <HStack justifyContent=\"space-between\">\r\n                    <TouchableOpacity\r\n                        key={1}\r\n                        onPress={() => {\r\n                            props.categoryFilter('all'), props.setActive(-1)\r\n                        }}\r\n                    >\r\n                        <Badge style={[styles.center, styles.badge, props.active === -1 ? styles.active : styles.inactive]} colorScheme=\"info\" >\r\n                            <Text style={styles.text}>All</Text>\r\n                        </Badge>\r\n                    </TouchableOpacity>\r\n                    {props.categories.map((item) => (\r\n                        <TouchableOpacity\r\n                            key={item._id}\r\n                            onPress={() => {\r\n                                props.categoryFilter(item._id),\r\n                                    props.setActive(props.categories.indexOf(item))\r\n                            }}\r\n                        >\r\n                            <Badge\r\n                                style={[styles.center, styles.badge, props.active === props.categories.indexOf(item) ? styles.active : styles.inactive]}\r\n                            >\r\n                                <Text style={styles.text}>{item.name}</Text>\r\n                            </Badge>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </HStack>\r\n            </VStack>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    center: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    badge: {\r\n        margin: 5,\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 5,\r\n        borderRadius: 20\r\n    },\r\n    text: {\r\n        color: 'white', \r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    active: {\r\n        backgroundColor: '#664229',\r\n    },\r\n    inactive: {\r\n        backgroundColor: '#D2B48C', \r\n    }\r\n});\r\n\r\nexport default CategoryFilter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}