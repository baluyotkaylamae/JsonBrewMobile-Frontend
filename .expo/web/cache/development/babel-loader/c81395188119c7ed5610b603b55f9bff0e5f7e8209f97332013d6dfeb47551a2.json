{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"cursorColor\", \"underlineColor\", \"outlineColor\", \"activeOutlineColor\", \"outlineStyle\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLabelTextLayout\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"onInputLayout\", \"onLayout\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\"],\n  _excluded2 = [\"fontSize\", \"fontWeight\", \"lineHeight\", \"height\", \"backgroundColor\", \"textAlign\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from './Adornment/TextInputAdornment';\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, OUTLINE_MINIMIZED_LABEL_Y_OFFSET, LABEL_PADDING_TOP, MIN_DENSE_HEIGHT_OUTLINED, LABEL_PADDING_TOP_DENSE } from './constants';\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, calculateOutlinedIconAndAffixTopPosition, getOutlinedInputColors, getConstants } from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nvar TextInputOutlined = function TextInputOutlined(_ref) {\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    customSelectionColor = _ref.selectionColor,\n    cursorColor = _ref.cursorColor,\n    _underlineColor = _ref.underlineColor,\n    customOutlineColor = _ref.outlineColor,\n    activeOutlineColor = _ref.activeOutlineColor,\n    outlineStyle = _ref.outlineStyle,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(NativeTextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLabelTextLayout = _ref.onLabelTextLayout,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    onInputLayout = _ref.onInputLayout,\n    onLayout = _ref.onLayout,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-outlined' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var adornmentConfig = getAdornmentConfig({\n    left: left,\n    right: right\n  });\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = getConstants(isV3),\n    INPUT_PADDING_HORIZONTAL = _getConstants.INPUT_PADDING_HORIZONTAL,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET,\n    MIN_WIDTH = _getConstants.MIN_WIDTH;\n  var _ref4 = StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref4.fontSize,\n    fontWeight = _ref4.fontWeight,\n    lineHeightStyle = _ref4.lineHeight,\n    height = _ref4.height,\n    _ref4$backgroundColor = _ref4.backgroundColor,\n    backgroundColor = _ref4$backgroundColor === void 0 ? colors === null || colors === void 0 ? void 0 : colors.background : _ref4$backgroundColor,\n    textAlign = _ref4.textAlign,\n    viewStyle = _objectWithoutProperties(_ref4, _excluded2);\n  var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  var lineHeight = lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n  var _getOutlinedInputColo = getOutlinedInputColors({\n      activeOutlineColor: activeOutlineColor,\n      customOutlineColor: customOutlineColor,\n      customSelectionColor: customSelectionColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getOutlinedInputColo.inputTextColor,\n    activeColor = _getOutlinedInputColo.activeColor,\n    outlineColor = _getOutlinedInputColo.outlineColor,\n    placeholderColor = _getOutlinedInputColo.placeholderColor,\n    errorColor = _getOutlinedInputColo.errorColor,\n    selectionColor = _getOutlinedInputColo.selectionColor;\n  var densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\n  var paddingTop = label ? LABEL_PADDING_TOP : 0;\n  var yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n  var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  var labelTranslationXOffset = 0;\n  var isAdornmentLeftIcon = adornmentConfig.some(function (_ref2) {\n    var side = _ref2.side,\n      type = _ref2.type;\n    return side === AdornmentSide.Left && type === AdornmentType.Icon;\n  });\n  var isAdornmentRightIcon = adornmentConfig.some(function (_ref3) {\n    var side = _ref3.side,\n      type = _ref3.type;\n    return side === AdornmentSide.Right && type === AdornmentType.Icon;\n  });\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (I18nManager.getConstants().isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n  var minInputHeight = (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n  var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, paddingTop);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  var pad = calculatePadding(paddingSettings);\n  var paddingOut = adjustPaddingOut(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n  var _React$useRef = React.useRef([new Animated.Value(0), new Animated.Value(1)]),\n    placeholderOpacityAnims = _React$useRef.current;\n  var placeholderOpacity = hasActiveOutline ? parentState.labeled : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n  var placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  };\n  var labelBackgroundColor = backgroundColor === 'transparent' ? theme.colors.background : backgroundColor;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    onLabelTextLayout: onLabelTextLayout,\n    placeholderOpacity: placeholderOpacity,\n    labelError: error,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor: errorColor,\n    labelTranslationXOffset: labelTranslationXOffset,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle,\n    inputContainerLayout: {\n      width: parentState.inputContainerLayout.width + (isAdornmentRightIcon || isAdornmentLeftIcon ? INPUT_PADDING_HORIZONTAL : 0)\n    },\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1,\n    isV3: isV3\n  };\n  var onLayoutChange = React.useCallback(function (e) {\n    onInputLayout(e);\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(e);\n  }, [onLayout, onInputLayout]);\n  var minHeight = height || (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT);\n  var outlinedHeight = inputHeight + (!height ? dense ? densePaddingTop / 2 : paddingTop : 0);\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  var rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset\n  });\n  var iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -yOffset\n  });\n  var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    mode: 'outlined',\n    isV3: isV3\n  });\n  var affixTopPosition = _defineProperty(_defineProperty({}, AdornmentSide.Left, leftAffixTopPosition), AdornmentSide.Right, rightAffixTopPosition);\n  var onAffixChange = _defineProperty(_defineProperty({}, AdornmentSide.Left, onLeftAffixLayoutChange), AdornmentSide.Right, onRightAffixLayoutChange);\n  var adornmentProps = {\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: _defineProperty(_defineProperty({}, AdornmentType.Icon, iconTopPosition), AdornmentType.Affix, affixTopPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled: disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(View, {\n    style: viewStyle\n  }, React.createElement(Outline, {\n    isV3: isV3,\n    style: outlineStyle,\n    label: label,\n    roundness: roundness,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), React.createElement(View, {\n    style: [styles.labelContainer, {\n      paddingTop: paddingTop,\n      minHeight: minHeight\n    }]\n  }, label ? React.createElement(InputLabel, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width\n  }, labelProps, {\n    labelBackground: LabelBackground,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  })) : null, render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({}, rest), {}, {\n    ref: innerRef,\n    onLayout: onLayoutChange,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor: selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.getConstants().isRTL ? 'right' : 'left',\n      paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n      minWidth: Math.min(parentState.labelTextLayout.width + 2 * INPUT_PADDING_HORIZONTAL, MIN_WIDTH)\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID: testID\n  }))), React.createElement(TextInputAdornment, adornmentProps));\n};\nexport default TextInputOutlined;\nvar styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"names":["React","Animated","View","NativeTextInput","StyleSheet","I18nManager","Platform","Outline","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","_ref","_ref$disabled","disabled","_ref$editable","editable","label","_ref$error","error","customSelectionColor","selectionColor","cursorColor","_underlineColor","underlineColor","customOutlineColor","outlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","_ref$render","render","props","createElement","_ref$multiline","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","onInputLayout","onLayout","left","right","placeholderTextColor","_ref$testID","testID","contentStyle","rest","_objectWithoutProperties","_excluded","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","_getConstants","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","MIN_WIDTH","_ref4","flatten","fontSizeStyle","fontSize","fontWeight","lineHeightStyle","lineHeight","height","_ref4$backgroundColor","backgroundColor","background","textAlign","viewStyle","_excluded2","OS","undefined","_getOutlinedInputColo","inputTextColor","activeColor","placeholderColor","errorColor","densePaddingTop","paddingTop","yOffset","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","_ref2","side","type","Left","Icon","isAdornmentRightIcon","_ref3","Right","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","_objectSpread","baseLabelTranslateY","_React$useRef","useRef","Value","placeholderOpacityAnims","current","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelBackgroundColor","labelProps","labelError","wiggleOffsetX","maxFontSizeMultiplier","inputContainerLayout","opacity","value","onLayoutChange","useCallback","e","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","_defineProperty","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","minWidth","Math","min","labelTextLayout","outline","create","paddingBottom","margin"],"sources":["C:\\JsonMobile\\frontend\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Animated,\r\n  View,\r\n  TextInput as NativeTextInput,\r\n  StyleSheet,\r\n  I18nManager,\r\n  Platform,\r\n  TextStyle,\r\n  ColorValue,\r\n  LayoutChangeEvent,\r\n} from 'react-native';\r\n\r\nimport { Outline } from './Addons/Outline';\r\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\r\nimport TextInputAdornment, {\r\n  getAdornmentConfig,\r\n  getAdornmentStyleAdjustmentForNativeInput,\r\n  TextInputAdornmentProps,\r\n} from './Adornment/TextInputAdornment';\r\nimport {\r\n  MAXIMIZED_LABEL_FONT_SIZE,\r\n  MINIMIZED_LABEL_FONT_SIZE,\r\n  LABEL_WIGGLE_X_OFFSET,\r\n  ADORNMENT_SIZE,\r\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\r\n  LABEL_PADDING_TOP,\r\n  MIN_DENSE_HEIGHT_OUTLINED,\r\n  LABEL_PADDING_TOP_DENSE,\r\n} from './constants';\r\nimport {\r\n  calculateLabelTopPosition,\r\n  calculateInputHeight,\r\n  calculatePadding,\r\n  adjustPaddingOut,\r\n  Padding,\r\n  calculateOutlinedIconAndAffixTopPosition,\r\n  getOutlinedInputColors,\r\n  getConstants,\r\n} from './helpers';\r\nimport InputLabel from './Label/InputLabel';\r\nimport LabelBackground from './Label/LabelBackground';\r\nimport type { RenderProps, ChildTextInputProps } from './types';\r\n\r\nconst TextInputOutlined = ({\r\n  disabled = false,\r\n  editable = true,\r\n  label,\r\n  error = false,\r\n  selectionColor: customSelectionColor,\r\n  cursorColor,\r\n  underlineColor: _underlineColor,\r\n  outlineColor: customOutlineColor,\r\n  activeOutlineColor,\r\n  outlineStyle,\r\n  textColor,\r\n  dense,\r\n  style,\r\n  theme,\r\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\r\n  multiline = false,\r\n  parentState,\r\n  innerRef,\r\n  onFocus,\r\n  forceFocus,\r\n  onBlur,\r\n  onChangeText,\r\n  onLayoutAnimatedText,\r\n  onLabelTextLayout,\r\n  onLeftAffixLayoutChange,\r\n  onRightAffixLayoutChange,\r\n  onInputLayout,\r\n  onLayout,\r\n  left,\r\n  right,\r\n  placeholderTextColor,\r\n  testID = 'text-input-outlined',\r\n  contentStyle,\r\n  ...rest\r\n}: ChildTextInputProps) => {\r\n  const adornmentConfig = getAdornmentConfig({ left, right });\r\n\r\n  const { colors, isV3, roundness } = theme;\r\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\r\n  const hasActiveOutline = parentState.focused || error;\r\n\r\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET, MIN_WIDTH } =\r\n    getConstants(isV3);\r\n\r\n  const {\r\n    fontSize: fontSizeStyle,\r\n    fontWeight,\r\n    lineHeight: lineHeightStyle,\r\n    height,\r\n    backgroundColor = colors?.background,\r\n    textAlign,\r\n    ...viewStyle\r\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\r\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\r\n  const lineHeight =\r\n    lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\r\n\r\n  const {\r\n    inputTextColor,\r\n    activeColor,\r\n    outlineColor,\r\n    placeholderColor,\r\n    errorColor,\r\n    selectionColor,\r\n  } = getOutlinedInputColors({\r\n    activeOutlineColor,\r\n    customOutlineColor,\r\n    customSelectionColor,\r\n    textColor,\r\n    disabled,\r\n    error,\r\n    theme,\r\n  });\r\n\r\n  const densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\r\n  const paddingTop = label ? LABEL_PADDING_TOP : 0;\r\n  const yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\r\n\r\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\r\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\r\n\r\n  const labelWidth = parentState.labelLayout.width;\r\n  const labelHeight = parentState.labelLayout.height;\r\n  const labelHalfWidth = labelWidth / 2;\r\n  const labelHalfHeight = labelHeight / 2;\r\n\r\n  const baseLabelTranslateX =\r\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\r\n    (labelHalfWidth -\r\n      (labelScale * labelWidth) / 2 -\r\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\r\n\r\n  let labelTranslationXOffset = 0;\r\n  const isAdornmentLeftIcon = adornmentConfig.some(\r\n    ({ side, type }) =>\r\n      side === AdornmentSide.Left && type === AdornmentType.Icon\r\n  );\r\n  const isAdornmentRightIcon = adornmentConfig.some(\r\n    ({ side, type }) =>\r\n      side === AdornmentSide.Right && type === AdornmentType.Icon\r\n  );\r\n\r\n  if (isAdornmentLeftIcon) {\r\n    labelTranslationXOffset =\r\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\r\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\r\n  }\r\n\r\n  const minInputHeight =\r\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\r\n\r\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\r\n\r\n  const topPosition = calculateLabelTopPosition(\r\n    labelHeight,\r\n    inputHeight,\r\n    paddingTop\r\n  );\r\n\r\n  if (height && typeof height !== 'number') {\r\n    // eslint-disable-next-line\r\n    console.warn('Currently we support only numbers in height prop');\r\n  }\r\n\r\n  const paddingSettings = {\r\n    height: height ? +height : null,\r\n    labelHalfHeight,\r\n    offset: paddingTop,\r\n    multiline: multiline ? multiline : null,\r\n    dense: dense ? dense : null,\r\n    topPosition,\r\n    fontSize,\r\n    lineHeight,\r\n    label,\r\n    scale: fontScale,\r\n    isAndroid: Platform.OS === 'android',\r\n    styles: StyleSheet.flatten(\r\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\r\n    ) as Padding,\r\n  };\r\n\r\n  const pad = calculatePadding(paddingSettings);\r\n\r\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\r\n\r\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\r\n\r\n  const { current: placeholderOpacityAnims } = React.useRef([\r\n    new Animated.Value(0),\r\n    new Animated.Value(1),\r\n  ]);\r\n\r\n  const placeholderOpacity = hasActiveOutline\r\n    ? parentState.labeled\r\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\r\n\r\n  const placeholderStyle = {\r\n    position: 'absolute',\r\n    left: 0,\r\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\r\n  };\r\n\r\n  const labelBackgroundColor: ColorValue =\r\n    backgroundColor === 'transparent'\r\n      ? theme.colors.background\r\n      : backgroundColor;\r\n\r\n  const labelProps = {\r\n    label,\r\n    onLayoutAnimatedText,\r\n    onLabelTextLayout,\r\n    placeholderOpacity,\r\n    labelError: error,\r\n    placeholderStyle,\r\n    baseLabelTranslateY,\r\n    baseLabelTranslateX,\r\n    font,\r\n    fontSize,\r\n    lineHeight,\r\n    fontWeight,\r\n    labelScale,\r\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\r\n    topPosition,\r\n    hasActiveOutline,\r\n    activeColor,\r\n    placeholderColor,\r\n    backgroundColor: labelBackgroundColor,\r\n    errorColor,\r\n    labelTranslationXOffset,\r\n    roundness,\r\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\r\n    testID,\r\n    contentStyle,\r\n    inputContainerLayout: {\r\n      width:\r\n        parentState.inputContainerLayout.width +\r\n        (isAdornmentRightIcon || isAdornmentLeftIcon\r\n          ? INPUT_PADDING_HORIZONTAL\r\n          : 0),\r\n    },\r\n    opacity:\r\n      parentState.value || parentState.focused\r\n        ? parentState.labelLayout.measured\r\n          ? 1\r\n          : 0\r\n        : 1,\r\n    isV3,\r\n  };\r\n\r\n  const onLayoutChange = React.useCallback(\r\n    (e: LayoutChangeEvent) => {\r\n      onInputLayout(e);\r\n      onLayout?.(e);\r\n    },\r\n    [onLayout, onInputLayout]\r\n  );\r\n\r\n  const minHeight = (height ||\r\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\r\n\r\n  const outlinedHeight =\r\n    inputHeight + (!height ? (dense ? densePaddingTop / 2 : paddingTop) : 0);\r\n\r\n  const { leftLayout, rightLayout } = parentState;\r\n\r\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\r\n    height: outlinedHeight,\r\n    affixHeight: leftLayout.height || 0,\r\n    labelYOffset: -yOffset,\r\n  });\r\n\r\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\r\n    height: outlinedHeight,\r\n    affixHeight: rightLayout.height || 0,\r\n    labelYOffset: -yOffset,\r\n  });\r\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\r\n    height: outlinedHeight,\r\n    affixHeight: ADORNMENT_SIZE,\r\n    labelYOffset: -yOffset,\r\n  });\r\n\r\n  const rightAffixWidth = right\r\n    ? rightLayout.width || ADORNMENT_SIZE\r\n    : ADORNMENT_SIZE;\r\n\r\n  const leftAffixWidth = left\r\n    ? leftLayout.width || ADORNMENT_SIZE\r\n    : ADORNMENT_SIZE;\r\n\r\n  const adornmentStyleAdjustmentForNativeInput =\r\n    getAdornmentStyleAdjustmentForNativeInput({\r\n      adornmentConfig,\r\n      rightAffixWidth,\r\n      leftAffixWidth,\r\n      mode: 'outlined',\r\n      isV3,\r\n    });\r\n  const affixTopPosition = {\r\n    [AdornmentSide.Left]: leftAffixTopPosition,\r\n    [AdornmentSide.Right]: rightAffixTopPosition,\r\n  };\r\n  const onAffixChange = {\r\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\r\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\r\n  };\r\n\r\n  let adornmentProps: TextInputAdornmentProps = {\r\n    adornmentConfig,\r\n    forceFocus,\r\n    topPosition: {\r\n      [AdornmentType.Icon]: iconTopPosition,\r\n      [AdornmentType.Affix]: affixTopPosition,\r\n    },\r\n    onAffixChange,\r\n    isTextInputFocused: parentState.focused,\r\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\r\n    disabled,\r\n  };\r\n  if (adornmentConfig.length) {\r\n    adornmentProps = {\r\n      ...adornmentProps,\r\n      left,\r\n      right,\r\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\r\n      visible: parentState.labeled,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <View style={viewStyle}>\r\n      {/*\r\n          Render the outline separately from the container\r\n          This is so that the label can overlap the outline\r\n          Otherwise the border will cut off the label on Android\r\n          */}\r\n      <Outline\r\n        isV3={isV3}\r\n        style={outlineStyle}\r\n        label={label}\r\n        roundness={roundness}\r\n        hasActiveOutline={hasActiveOutline}\r\n        focused={parentState.focused}\r\n        activeColor={activeColor}\r\n        outlineColor={outlineColor}\r\n        backgroundColor={backgroundColor}\r\n      />\r\n      <View\r\n        style={[\r\n          styles.labelContainer,\r\n          {\r\n            paddingTop,\r\n            minHeight,\r\n          },\r\n        ]}\r\n      >\r\n        {label ? (\r\n          <InputLabel\r\n            labeled={parentState.labeled}\r\n            error={parentState.error}\r\n            focused={parentState.focused}\r\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\r\n            labelLayoutMeasured={parentState.labelLayout.measured}\r\n            labelLayoutWidth={parentState.labelLayout.width}\r\n            {...labelProps}\r\n            labelBackground={LabelBackground}\r\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\r\n          />\r\n        ) : null}\r\n        {render?.({\r\n          ...rest,\r\n          ref: innerRef,\r\n          onLayout: onLayoutChange,\r\n          onChangeText,\r\n          placeholder: label ? parentState.placeholder : rest.placeholder,\r\n          editable: !disabled && editable,\r\n          selectionColor,\r\n          cursorColor:\r\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\r\n          placeholderTextColor: placeholderTextColor || placeholderColor,\r\n          onFocus,\r\n          onBlur,\r\n          underlineColorAndroid: 'transparent',\r\n          multiline,\r\n          style: [\r\n            styles.input,\r\n            !multiline || (multiline && height) ? { height: inputHeight } : {},\r\n            paddingOut,\r\n            {\r\n              ...font,\r\n              fontSize,\r\n              lineHeight,\r\n              fontWeight,\r\n              color: inputTextColor,\r\n              textAlignVertical: multiline ? 'top' : 'center',\r\n              textAlign: textAlign\r\n                ? textAlign\r\n                : I18nManager.getConstants().isRTL\r\n                ? 'right'\r\n                : 'left',\r\n              paddingHorizontal: INPUT_PADDING_HORIZONTAL,\r\n              minWidth: Math.min(\r\n                parentState.labelTextLayout.width +\r\n                  2 * INPUT_PADDING_HORIZONTAL,\r\n                MIN_WIDTH\r\n              ),\r\n            },\r\n            Platform.OS === 'web' && { outline: 'none' },\r\n            adornmentStyleAdjustmentForNativeInput,\r\n            contentStyle,\r\n          ],\r\n          testID,\r\n        } as RenderProps)}\r\n      </View>\r\n      <TextInputAdornment {...adornmentProps} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TextInputOutlined;\r\n\r\nconst styles = StyleSheet.create({\r\n  labelContainer: {\r\n    paddingBottom: 0,\r\n  },\r\n  input: {\r\n    margin: 0,\r\n  },\r\n  inputOutlined: {\r\n    paddingTop: 8,\r\n    paddingBottom: 8,\r\n  },\r\n  inputOutlinedDense: {\r\n    paddingTop: 4,\r\n    paddingBottom: 4,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}