{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\JsonMobile\\\\frontend\\\\Screens\\\\Admin\\\\Charts.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LineChart, BarChart, PieChart } from \"react-native-chart-kit\";\nimport axios from \"axios\";\nimport baseURL from \"../../assets/common/baseurl\";\nimport ModalDropdown from \"react-native-modal-dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Chart = function Chart() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    orders = _useState2[0],\n    setOrders = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    products = _useState4[0],\n    setProducts = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState({\n      totalSales: \"Line\",\n      productCounts: \"Bar\",\n      orderCount: \"Line\"\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedChartType = _useState8[0],\n    setSelectedChartType = _useState8[1];\n  useEffect(function () {\n    axios.get(`${baseURL}orders`).then(function (res) {\n      setOrders(res.data);\n      setLoading(false);\n    }).catch(function (error) {\n      console.log(\"Error loading orders\", error);\n      setLoading(false);\n    });\n    axios.get(`${baseURL}products`).then(function (res) {\n      setProducts(res.data);\n    }).catch(function (error) {\n      console.log(\"Error loading products\", error);\n    });\n  }, []);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this);\n  }\n  var salesData = {};\n  var orderCountData = {};\n  orders.forEach(function (order) {\n    var date = new Date(order.dateOrdered).toLocaleDateString();\n    if (!salesData[date]) {\n      salesData[date] = 0;\n      orderCountData[date] = 0;\n    }\n    salesData[date] += order.totalPrice;\n    orderCountData[date]++;\n  });\n  var labels = Object.keys(salesData);\n  var data = labels.map(function (label) {\n    return salesData[label];\n  });\n  var productCounts = {};\n  products.forEach(function (product) {\n    productCounts[product.name] = product.countInStock;\n  });\n  var productLabels = Object.keys(productCounts);\n  var productData = productLabels.map(function (label) {\n    return productCounts[label];\n  });\n  var orderCountChartData = labels.map(function (label) {\n    return orderCountData[label] || 0;\n  });\n  var chartConfig = {\n    backgroundColor: \"#FF66C4\",\n    backgroundGradientFrom: \"#664229\",\n    backgroundGradientTo: \"#CBA387\",\n    decimalPlaces: 0,\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return `rgba(255, 255, 255, ${opacity})`;\n    },\n    labelColor: function labelColor() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return `rgba(255, 255, 255, ${opacity})`;\n    },\n    style: {\n      borderRadius: 16\n    }\n  };\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.scrollContainer,\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(View, {\n        style: styles.chartContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Total Sales by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this), _jsxDEV(ModalDropdown, {\n          options: [\"Line\", \"Bar\", \"Pie\"],\n          onSelect: function onSelect(index, value) {\n            return setSelectedChartType(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                totalSales: value\n              });\n            });\n          },\n          textStyle: styles.dropdownText,\n          dropdownStyle: styles.dropdownStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this), selectedChartType.totalSales === \"Line\" && _jsxDEV(LineChart, {\n          data: {\n            labels: labels,\n            datasets: [{\n              data: data\n            }]\n          },\n          width: 350,\n          height: 220,\n          yAxisLabel: \"$\",\n          yAxisSuffix: \"k\",\n          yAxisInterval: 1,\n          chartConfig: chartConfig,\n          bezier: true,\n          style: {\n            marginVertical: 10,\n            borderRadius: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, _this), selectedChartType.totalSales === \"Bar\" && _jsxDEV(BarChart, {\n          data: {\n            labels: labels,\n            datasets: [{\n              data: data\n            }]\n          },\n          width: 350,\n          height: 220,\n          yAxisLabel: \"$\",\n          yAxisSuffix: \"k\",\n          yAxisInterval: 1,\n          chartConfig: chartConfig,\n          style: {\n            marginVertical: 10,\n            borderRadius: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, _this), selectedChartType.totalSales === \"Pie\" && _jsxDEV(_Fragment, {\n          children: [_jsxDEV(PieChart, {\n            data: labels.map(function (label, index) {\n              return {\n                name: label,\n                population: data[index],\n                color: `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 1)`,\n                legendFontColor: \"#7F7F7F\",\n                legendFontSize: 15\n              };\n            }),\n            width: Dimensions.get(\"window\").width - 16,\n            height: 220,\n            chartConfig: chartConfig,\n            accessor: \"population\",\n            backgroundColor: \"transparent\",\n            paddingLeft: \"15\",\n            absolute: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, _this), _jsxDEV(ModalDropdown, {\n            options: [\"Line\", \"Bar\", \"Pie\"],\n            onSelect: function onSelect(index, value) {\n              return setSelectedChartType(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  totalSales: value\n                });\n              });\n            },\n            textStyle: styles.dropdownText,\n            dropdownStyle: styles.dropdownStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this), selectedChartType.totalSales === \"Pie\" && _jsxDEV(View, {\n        style: styles.chartContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Pie Chart Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, _this), _jsxDEV(ModalDropdown, {\n          options: [\"Line\", \"Bar\", \"Pie\"],\n          onSelect: function onSelect(index, value) {\n            return setSelectedChartType(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                totalSales: value\n              });\n            });\n          },\n          textStyle: styles.dropdownText,\n          dropdownStyle: styles.dropdownStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, _this), _jsxDEV(View, {\n        style: styles.chartContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Product Counts in Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, _this), _jsxDEV(ModalDropdown, {\n          options: [\"Line\", \"Bar\", \"Pie\"],\n          onSelect: function onSelect(index, value) {\n            return setSelectedChartType(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                productCounts: value\n              });\n            });\n          },\n          textStyle: styles.dropdownText,\n          dropdownStyle: styles.dropdownStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, _this), selectedChartType.productCounts === \"Line\" && _jsxDEV(LineChart, {\n          data: {\n            labels: productLabels,\n            datasets: [{\n              data: productData\n            }]\n          },\n          width: 350,\n          height: 220,\n          yAxisLabel: \"#\",\n          chartConfig: chartConfig,\n          bezier: true,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, _this), selectedChartType.productCounts === \"Bar\" && _jsxDEV(BarChart, {\n          data: {\n            labels: productLabels,\n            datasets: [{\n              data: productData\n            }]\n          },\n          width: 350,\n          height: 220,\n          yAxisLabel: \"#\",\n          chartConfig: chartConfig,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, _this), selectedChartType.productCounts === \"Pie\" && _jsxDEV(_Fragment, {\n          children: [_jsxDEV(PieChart, {\n            data: productLabels.map(function (label, index) {\n              return {\n                name: label,\n                population: productData[index],\n                color: `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 1)`,\n                legendFontColor: \"#7F7F7F\",\n                legendFontSize: 15\n              };\n            }),\n            width: Dimensions.get(\"window\").width - 16,\n            height: 220,\n            chartConfig: chartConfig,\n            accessor: \"population\",\n            backgroundColor: \"transparent\",\n            paddingLeft: \"15\",\n            absolute: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, _this), _jsxDEV(ModalDropdown, {\n            options: [\"Line\", \"Bar\", \"Pie\"],\n            onSelect: function onSelect(index, value) {\n              return setSelectedChartType(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  productCounts: value\n                });\n              });\n            },\n            textStyle: styles.dropdownText,\n            dropdownStyle: styles.dropdownStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, _this), _jsxDEV(View, {\n        style: styles.chartContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.title,\n          children: \"Number of Orders Each Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, _this), _jsxDEV(ModalDropdown, {\n          options: [\"Line\", \"Bar\", \"Pie\"],\n          onSelect: function onSelect(index, value) {\n            return setSelectedChartType(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                orderCount: value\n              });\n            });\n          },\n          textStyle: styles.dropdownText,\n          dropdownStyle: styles.dropdownStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, _this), selectedChartType.orderCount === \"Line\" && _jsxDEV(LineChart, {\n          data: {\n            labels: labels,\n            datasets: [{\n              data: orderCountChartData\n            }]\n          },\n          width: 350,\n          height: 220,\n          yAxisLabel: \"#\",\n          chartConfig: chartConfig,\n          bezier: true,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, _this), selectedChartType.orderCount === \"Bar\" && _jsxDEV(BarChart, {\n          data: {\n            labels: labels,\n            datasets: [{\n              data: orderCountChartData\n            }]\n          },\n          width: 350,\n          height: 220,\n          yAxisLabel: \"#\",\n          chartConfig: chartConfig,\n          style: {\n            marginVertical: 8,\n            borderRadius: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, _this), selectedChartType.orderCount === \"Pie\" && _jsxDEV(_Fragment, {\n          children: [_jsxDEV(PieChart, {\n            data: labels.map(function (label, index) {\n              return {\n                name: label,\n                population: orderCountChartData[index],\n                color: `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 1)`,\n                legendFontColor: \"#7F7F7F\",\n                legendFontSize: 15\n              };\n            }),\n            width: Dimensions.get(\"window\").width - 16,\n            height: 220,\n            chartConfig: chartConfig,\n            accessor: \"population\",\n            backgroundColor: \"transparent\",\n            paddingLeft: \"15\",\n            absolute: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, _this), _jsxDEV(ModalDropdown, {\n            options: [\"Line\", \"Bar\", \"Pie\"],\n            onSelect: function onSelect(index, value) {\n              return setSelectedChartType(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  orderCount: value\n                });\n              });\n            },\n            textStyle: styles.dropdownText,\n            dropdownStyle: styles.dropdownStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  scrollContainer: {\n    flexGrow: 1\n  },\n  chartContainer: {\n    marginBottom: 20\n  },\n  title: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 5\n  },\n  dropdownText: {\n    fontSize: 18,\n    padding: 10,\n    textAlign: \"center\"\n  },\n  dropdownStyle: {\n    width: 150,\n    height: 120,\n    borderRadius: 8,\n    borderColor: \"#ccc\",\n    borderWidth: 1\n  }\n});\nexport default Chart;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","Dimensions","ScrollView","LineChart","BarChart","PieChart","axios","baseURL","ModalDropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","Chart","_useState","_useState2","_slicedToArray","orders","setOrders","_useState3","_useState4","products","setProducts","_useState5","_useState6","loading","setLoading","_useState7","totalSales","productCounts","orderCount","_useState8","selectedChartType","setSelectedChartType","get","then","res","data","catch","error","console","log","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","salesData","orderCountData","forEach","order","date","Date","dateOrdered","toLocaleDateString","totalPrice","labels","Object","keys","map","label","product","name","countInStock","productLabels","productData","orderCountChartData","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","labelColor","borderRadius","contentContainerStyle","scrollContainer","chartContainer","title","options","onSelect","index","value","prevState","_objectSpread","textStyle","dropdownText","dropdownStyle","datasets","width","height","yAxisLabel","yAxisSuffix","yAxisInterval","bezier","marginVertical","population","Math","floor","random","legendFontColor","legendFontSize","accessor","paddingLeft","absolute","create","flex","alignItems","justifyContent","flexGrow","marginBottom","fontWeight","textAlign","fontSize","padding","borderColor","borderWidth"],"sources":["C:/JsonMobile/frontend/Screens/Admin/Charts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet, Dimensions, ScrollView } from \"react-native\";\r\nimport { LineChart, BarChart, PieChart } from \"react-native-chart-kit\";\r\nimport axios from \"axios\";\r\nimport baseURL from \"../../assets/common/baseurl\";\r\nimport ModalDropdown from \"react-native-modal-dropdown\";\r\n\r\nconst Chart = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedChartType, setSelectedChartType] = useState({\r\n    totalSales: \"Line\",\r\n    productCounts: \"Bar\",\r\n    orderCount: \"Line\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseURL}orders`)\r\n      .then((res) => {\r\n        setOrders(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error loading orders\", error);\r\n        setLoading(false);\r\n      });\r\n\r\n    axios\r\n      .get(`${baseURL}products`)\r\n      .then((res) => {\r\n        setProducts(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error loading products\", error);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // Aggregate total sales for each date\r\n  const salesData = {};\r\n  const orderCountData = {};\r\n  orders.forEach((order) => {\r\n    const date = new Date(order.dateOrdered).toLocaleDateString();\r\n    if (!salesData[date]) {\r\n      salesData[date] = 0;\r\n      orderCountData[date] = 0;\r\n    }\r\n    salesData[date] += order.totalPrice;\r\n    orderCountData[date]++;\r\n  });\r\n\r\n  // Extract labels and data for the line chart\r\n  const labels = Object.keys(salesData);\r\n  const data = labels.map((label) => salesData[label]);\r\n\r\n  // Extract product counts in stocks for the bar chart\r\n  const productCounts = {};\r\n  products.forEach((product) => {\r\n    productCounts[product.name] = product.countInStock;\r\n  });\r\n\r\n  const productLabels = Object.keys(productCounts);\r\n  const productData = productLabels.map((label) => productCounts[label]);\r\n\r\n  // Prepare data for the line chart - Number of orders each day\r\n  const orderCountChartData = labels.map((label) => orderCountData[label] || 0);\r\n\r\n  // Configure chart appearance\r\n  const chartConfig = {\r\n    backgroundColor: \"#FF66C4\",\r\n    backgroundGradientFrom: \"#664229\",\r\n    backgroundGradientTo: \"#CBA387\",\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n      <View style={styles.container}>\r\n        <View style={styles.chartContainer}>\r\n          <Text style={styles.title}>Total Sales by Date</Text>\r\n          <ModalDropdown\r\n            options={[\"Line\", \"Bar\", \"Pie\"]}\r\n            onSelect={(index, value) =>\r\n              setSelectedChartType((prevState) => ({\r\n                ...prevState,\r\n                totalSales: value,\r\n              }))\r\n            }\r\n            textStyle={styles.dropdownText}\r\n            dropdownStyle={styles.dropdownStyle}\r\n          />\r\n          {selectedChartType.totalSales === \"Line\" && (\r\n            <LineChart\r\n              data={{\r\n                labels: labels,\r\n                datasets: [{ data: data }],\r\n              }}\r\n              width={350}\r\n              height={220}\r\n              yAxisLabel=\"$\"\r\n              yAxisSuffix=\"k\"\r\n              yAxisInterval={1}\r\n              chartConfig={chartConfig}\r\n              bezier\r\n              style={{\r\n                marginVertical: 10,\r\n                borderRadius: 10,\r\n              }}\r\n            />\r\n          )}\r\n          {selectedChartType.totalSales === \"Bar\" && (\r\n            <BarChart\r\n              data={{\r\n                labels: labels,\r\n                datasets: [{ data: data }],\r\n              }}\r\n              width={350}\r\n              height={220}\r\n              yAxisLabel=\"$\"\r\n              yAxisSuffix=\"k\"\r\n              yAxisInterval={1}\r\n              chartConfig={chartConfig}\r\n              style={{\r\n                marginVertical: 10,\r\n                borderRadius: 10,\r\n              }}\r\n            />\r\n          )}\r\n          {selectedChartType.totalSales === \"Pie\" && (\r\n            <>\r\n              <PieChart\r\n                data={labels.map((label, index) => ({\r\n                  name: label,\r\n                  population: data[index],\r\n                  color: `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(\r\n                    Math.random() * 256\r\n                  )}, ${Math.floor(Math.random() * 256)}, 1)`,\r\n                  legendFontColor: \"#7F7F7F\",\r\n                  legendFontSize: 15,\r\n                }))}\r\n                width={Dimensions.get(\"window\").width - 16}\r\n                height={220}\r\n                chartConfig={chartConfig}\r\n                accessor=\"population\"\r\n                backgroundColor=\"transparent\"\r\n                paddingLeft=\"15\"\r\n                absolute\r\n              />\r\n              <ModalDropdown\r\n                options={[\"Line\", \"Bar\", \"Pie\"]}\r\n                onSelect={(index, value) =>\r\n                  setSelectedChartType((prevState) => ({\r\n                    ...prevState,\r\n                    totalSales: value,\r\n                  }))\r\n                }\r\n                textStyle={styles.dropdownText}\r\n                dropdownStyle={styles.dropdownStyle}\r\n              />\r\n            </>\r\n          )}\r\n        </View>\r\n        {selectedChartType.totalSales === \"Pie\" && (\r\n          <View style={styles.chartContainer}>\r\n            <Text style={styles.title}>Pie Chart Options</Text>\r\n            <ModalDropdown\r\n              options={[\"Line\", \"Bar\", \"Pie\"]}\r\n              onSelect={(index, value) =>\r\n                setSelectedChartType((prevState) => ({\r\n                  ...prevState,\r\n                  totalSales: value,\r\n                }))\r\n              }\r\n              textStyle={styles.dropdownText}\r\n              dropdownStyle={styles.dropdownStyle}\r\n            />\r\n          </View>\r\n        )}\r\n        <View style={styles.chartContainer}>\r\n          <Text style={styles.title}>Product Counts in Stocks</Text>\r\n          <ModalDropdown\r\n            options={[\"Line\", \"Bar\", \"Pie\"]}\r\n            onSelect={(index, value) =>\r\n              setSelectedChartType((prevState) => ({\r\n                ...prevState,\r\n                productCounts: value,\r\n              }))\r\n            }\r\n            textStyle={styles.dropdownText}\r\n            dropdownStyle={styles.dropdownStyle}\r\n          />\r\n          {selectedChartType.productCounts === \"Line\" && (\r\n            <LineChart\r\n              data={{\r\n                labels: productLabels,\r\n                datasets: [{ data: productData }],\r\n              }}\r\n              width={350}\r\n              height={220}\r\n              yAxisLabel=\"#\"\r\n              chartConfig={chartConfig}\r\n              bezier\r\n              style={{\r\n                marginVertical: 8,\r\n                borderRadius: 16,\r\n              }}\r\n            />\r\n          )}\r\n          {selectedChartType.productCounts === \"Bar\" && (\r\n            <BarChart\r\n              data={{\r\n                labels: productLabels,\r\n                datasets: [{ data: productData }],\r\n              }}\r\n              width={350}\r\n              height={220}\r\n              yAxisLabel=\"#\"\r\n              chartConfig={chartConfig}\r\n              style={{\r\n                marginVertical: 8,\r\n                borderRadius: 16,\r\n              }}\r\n            />\r\n          )}\r\n          {selectedChartType.productCounts === \"Pie\" && (\r\n            <>\r\n              <PieChart\r\n                data={productLabels.map((label, index) => ({\r\n                  name: label,\r\n                  population: productData[index],\r\n                  color: `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(\r\n                    Math.random() * 256\r\n                  )}, ${Math.floor(Math.random() * 256)}, 1)`,\r\n                  legendFontColor: \"#7F7F7F\",\r\n                  legendFontSize: 15,\r\n                }))}\r\n                width={Dimensions.get(\"window\").width - 16}\r\n                height={220}\r\n                chartConfig={chartConfig}\r\n                accessor=\"population\"\r\n                backgroundColor=\"transparent\"\r\n                paddingLeft=\"15\"\r\n                absolute\r\n              />\r\n              <ModalDropdown\r\n                options={[\"Line\", \"Bar\", \"Pie\"]}\r\n                onSelect={(index, value) =>\r\n                  setSelectedChartType((prevState) => ({\r\n                    ...prevState,\r\n                    productCounts: value,\r\n                  }))\r\n                }\r\n                textStyle={styles.dropdownText}\r\n                dropdownStyle={styles.dropdownStyle}\r\n              />\r\n            </>\r\n          )}\r\n        </View>\r\n        <View style={styles.chartContainer}>\r\n          <Text style={styles.title}>Number of Orders Each Day</Text>\r\n          <ModalDropdown\r\n            options={[\"Line\", \"Bar\", \"Pie\"]}\r\n            onSelect={(index, value) =>\r\n              setSelectedChartType((prevState) => ({\r\n                ...prevState,\r\n                orderCount: value,\r\n              }))\r\n            }\r\n            textStyle={styles.dropdownText}\r\n            dropdownStyle={styles.dropdownStyle}\r\n          />\r\n          {selectedChartType.orderCount === \"Line\" && (\r\n            <LineChart\r\n              data={{\r\n                labels: labels,\r\n                datasets: [{ data: orderCountChartData }],\r\n              }}\r\n              width={350}\r\n              height={220}\r\n              yAxisLabel=\"#\"\r\n              chartConfig={chartConfig}\r\n              bezier\r\n              style={{\r\n                marginVertical: 8,\r\n                borderRadius: 16,\r\n              }}\r\n            />\r\n          )}\r\n          {selectedChartType.orderCount === \"Bar\" && (\r\n            <BarChart\r\n              data={{\r\n                labels: labels,\r\n                datasets: [{ data: orderCountChartData }],\r\n              }}\r\n              width={350}\r\n              height={220}\r\n              yAxisLabel=\"#\"\r\n              chartConfig={chartConfig}\r\n              style={{\r\n                marginVertical: 8,\r\n                borderRadius: 16,\r\n              }}\r\n            />\r\n          )}\r\n          {selectedChartType.orderCount === \"Pie\" && (\r\n            <>\r\n              <PieChart\r\n                data={labels.map((label, index) => ({\r\n                  name: label,\r\n                  population: orderCountChartData[index],\r\n                  color: `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(\r\n                    Math.random() * 256\r\n                  )}, ${Math.floor(Math.random() * 256)}, 1)`,\r\n                  legendFontColor: \"#7F7F7F\",\r\n                  legendFontSize: 15,\r\n                }))}\r\n                width={Dimensions.get(\"window\").width - 16}\r\n                height={220}\r\n                chartConfig={chartConfig}\r\n                accessor=\"population\"\r\n                backgroundColor=\"transparent\"\r\n                paddingLeft=\"15\"\r\n                absolute\r\n              />\r\n              <ModalDropdown\r\n                options={[\"Line\", \"Bar\", \"Pie\"]}\r\n                onSelect={(index, value) =>\r\n                  setSelectedChartType((prevState) => ({\r\n                    ...prevState,\r\n                    orderCount: value,\r\n                  }))\r\n                }\r\n                textStyle={styles.dropdownText}\r\n                dropdownStyle={styles.dropdownStyle}\r\n              />\r\n            </>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  chartContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    marginBottom: 5,\r\n  },\r\n  dropdownText: {\r\n    fontSize: 18,\r\n    padding: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  dropdownStyle: {\r\n    width: 150,\r\n    height: 120,\r\n    borderRadius: 8,\r\n    borderColor: \"#ccc\",\r\n    borderWidth: 1,\r\n  },\r\n});\r\n\r\nexport default Chart;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,wBAAwB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAClB,IAAAC,SAAA,GAA4BjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAAgCtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA8B1B,QAAQ,CAAC,IAAI,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAkD9B,QAAQ,CAAC;MACzD+B,UAAU,EAAE,MAAM;MAClBC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE;IACd,CAAC,CAAC;IAAAC,UAAA,GAAAf,cAAA,CAAAW,UAAA;IAJKK,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAM9CnC,SAAS,CAAC,YAAM;IACdU,KAAK,CACF4B,GAAG,CAAE,GAAE3B,OAAQ,QAAO,CAAC,CACvB4B,IAAI,CAAC,UAACC,GAAG,EAAK;MACblB,SAAS,CAACkB,GAAG,CAACC,IAAI,CAAC;MACnBX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDY,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC1Cb,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEJpB,KAAK,CACF4B,GAAG,CAAE,GAAE3B,OAAQ,UAAS,CAAC,CACzB4B,IAAI,CAAC,UAACC,GAAG,EAAK;MACbd,WAAW,CAACc,GAAG,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAId,OAAO,EAAE;IACX,OACEf,OAAA,CAACZ,IAAI;MAAC4C,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,EAC5BnC,OAAA,CAACX,IAAI;QAAA8C,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACnB,CAAC;EAEX;EAGA,IAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,IAAMC,cAAc,GAAG,CAAC,CAAC;EACzBnC,MAAM,CAACoC,OAAO,CAAC,UAACC,KAAK,EAAK;IACxB,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAACG,WAAW,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAC7D,IAAI,CAACP,SAAS,CAACI,IAAI,CAAC,EAAE;MACpBJ,SAAS,CAACI,IAAI,CAAC,GAAG,CAAC;MACnBH,cAAc,CAACG,IAAI,CAAC,GAAG,CAAC;IAC1B;IACAJ,SAAS,CAACI,IAAI,CAAC,IAAID,KAAK,CAACK,UAAU;IACnCP,cAAc,CAACG,IAAI,CAAC,EAAE;EACxB,CAAC,CAAC;EAGF,IAAMK,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACX,SAAS,CAAC;EACrC,IAAMd,IAAI,GAAGuB,MAAM,CAACG,GAAG,CAAC,UAACC,KAAK;IAAA,OAAKb,SAAS,CAACa,KAAK,CAAC;EAAA,EAAC;EAGpD,IAAMnC,aAAa,GAAG,CAAC,CAAC;EACxBR,QAAQ,CAACgC,OAAO,CAAC,UAACY,OAAO,EAAK;IAC5BpC,aAAa,CAACoC,OAAO,CAACC,IAAI,CAAC,GAAGD,OAAO,CAACE,YAAY;EACpD,CAAC,CAAC;EAEF,IAAMC,aAAa,GAAGP,MAAM,CAACC,IAAI,CAACjC,aAAa,CAAC;EAChD,IAAMwC,WAAW,GAAGD,aAAa,CAACL,GAAG,CAAC,UAACC,KAAK;IAAA,OAAKnC,aAAa,CAACmC,KAAK,CAAC;EAAA,EAAC;EAGtE,IAAMM,mBAAmB,GAAGV,MAAM,CAACG,GAAG,CAAC,UAACC,KAAK;IAAA,OAAKZ,cAAc,CAACY,KAAK,CAAC,IAAI,CAAC;EAAA,EAAC;EAG7E,IAAMO,WAAW,GAAG;IAClBC,eAAe,EAAE,SAAS;IAC1BC,sBAAsB,EAAE,SAAS;IACjCC,oBAAoB,EAAE,SAAS;IAC/BC,aAAa,EAAE,CAAC;IAChBC,KAAK,EAAE,SAAAA,MAAA;MAAA,IAACC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;MAAA,OAAM,uBAAsBD,OAAQ,GAAE;IAAA;IACzDI,UAAU,EAAE,SAAAA,WAAA;MAAA,IAACJ,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;MAAA,OAAM,uBAAsBD,OAAQ,GAAE;IAAA;IAC9DnC,KAAK,EAAE;MACLwC,YAAY,EAAE;IAChB;EACF,CAAC;EAED,OACExE,OAAA,CAACR,UAAU;IAACiF,qBAAqB,EAAExC,MAAM,CAACyC,eAAgB;IAAAvC,QAAA,EACxDnC,OAAA,CAACZ,IAAI;MAAC4C,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,GAC5BnC,OAAA,CAACZ,IAAI;QAAC4C,KAAK,EAAEC,MAAM,CAAC0C,cAAe;QAAAxC,QAAA,GACjCnC,OAAA,CAACX,IAAI;UAAC2C,KAAK,EAAEC,MAAM,CAAC2C,KAAM;UAAAzC,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EACrDxC,OAAA,CAACF,aAAa;UACZ+E,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE;UAChCC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK;YAAA,OACrBzD,oBAAoB,CAAC,UAAC0D,SAAS;cAAA,OAAAC,aAAA,CAAAA,aAAA,KAC1BD,SAAS;gBACZ/D,UAAU,EAAE8D;cAAK;YAAA,CACjB,CAAC;UAAA,CACJ;UACDG,SAAS,EAAElD,MAAM,CAACmD,YAAa;UAC/BC,aAAa,EAAEpD,MAAM,CAACoD;QAAc;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACrC,CAAC,EACDlB,iBAAiB,CAACJ,UAAU,KAAK,MAAM,IACtClB,OAAA,CAACP,SAAS;UACRkC,IAAI,EAAE;YACJuB,MAAM,EAAEA,MAAM;YACdoC,QAAQ,EAAE,CAAC;cAAE3D,IAAI,EAAEA;YAAK,CAAC;UAC3B,CAAE;UACF4D,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZC,UAAU,EAAC,GAAG;UACdC,WAAW,EAAC,GAAG;UACfC,aAAa,EAAE,CAAE;UACjB9B,WAAW,EAAEA,WAAY;UACzB+B,MAAM;UACN5D,KAAK,EAAE;YACL6D,cAAc,EAAE,EAAE;YAClBrB,YAAY,EAAE;UAChB;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACH,CACF,EACAlB,iBAAiB,CAACJ,UAAU,KAAK,KAAK,IACrClB,OAAA,CAACN,QAAQ;UACPiC,IAAI,EAAE;YACJuB,MAAM,EAAEA,MAAM;YACdoC,QAAQ,EAAE,CAAC;cAAE3D,IAAI,EAAEA;YAAK,CAAC;UAC3B,CAAE;UACF4D,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZC,UAAU,EAAC,GAAG;UACdC,WAAW,EAAC,GAAG;UACfC,aAAa,EAAE,CAAE;UACjB9B,WAAW,EAAEA,WAAY;UACzB7B,KAAK,EAAE;YACL6D,cAAc,EAAE,EAAE;YAClBrB,YAAY,EAAE;UAChB;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACH,CACF,EACAlB,iBAAiB,CAACJ,UAAU,KAAK,KAAK,IACrClB,OAAA,CAAAE,SAAA;UAAAiC,QAAA,GACEnC,OAAA,CAACL,QAAQ;YACPgC,IAAI,EAAEuB,MAAM,CAACG,GAAG,CAAC,UAACC,KAAK,EAAEyB,KAAK;cAAA,OAAM;gBAClCvB,IAAI,EAAEF,KAAK;gBACXwC,UAAU,EAAEnE,IAAI,CAACoD,KAAK,CAAC;gBACvBb,KAAK,EAAG,QAAO6B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAE,KAAIF,IAAI,CAACC,KAAK,CAC3DD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAClB,CAAE,KAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAE,MAAK;gBAC3CC,eAAe,EAAE,SAAS;gBAC1BC,cAAc,EAAE;cAClB,CAAC;YAAA,CAAC,CAAE;YACJZ,KAAK,EAAEhG,UAAU,CAACiC,GAAG,CAAC,QAAQ,CAAC,CAAC+D,KAAK,GAAG,EAAG;YAC3CC,MAAM,EAAE,GAAI;YACZ3B,WAAW,EAAEA,WAAY;YACzBuC,QAAQ,EAAC,YAAY;YACrBtC,eAAe,EAAC,aAAa;YAC7BuC,WAAW,EAAC,IAAI;YAChBC,QAAQ;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACT,CAAC,EACFxC,OAAA,CAACF,aAAa;YACZ+E,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE;YAChCC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK;cAAA,OACrBzD,oBAAoB,CAAC,UAAC0D,SAAS;gBAAA,OAAAC,aAAA,CAAAA,aAAA,KAC1BD,SAAS;kBACZ/D,UAAU,EAAE8D;gBAAK;cAAA,CACjB,CAAC;YAAA,CACJ;YACDG,SAAS,EAAElD,MAAM,CAACmD,YAAa;YAC/BC,aAAa,EAAEpD,MAAM,CAACoD;UAAc;YAAAjD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACrC,CAAC;QAAA,eACF,CACH;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACG,CAAC,EACNlB,iBAAiB,CAACJ,UAAU,KAAK,KAAK,IACrClB,OAAA,CAACZ,IAAI;QAAC4C,KAAK,EAAEC,MAAM,CAAC0C,cAAe;QAAAxC,QAAA,GACjCnC,OAAA,CAACX,IAAI;UAAC2C,KAAK,EAAEC,MAAM,CAAC2C,KAAM;UAAAzC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EACnDxC,OAAA,CAACF,aAAa;UACZ+E,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE;UAChCC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK;YAAA,OACrBzD,oBAAoB,CAAC,UAAC0D,SAAS;cAAA,OAAAC,aAAA,CAAAA,aAAA,KAC1BD,SAAS;gBACZ/D,UAAU,EAAE8D;cAAK;YAAA,CACjB,CAAC;UAAA,CACJ;UACDG,SAAS,EAAElD,MAAM,CAACmD,YAAa;UAC/BC,aAAa,EAAEpD,MAAM,CAACoD;QAAc;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACrC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACE,CACP,EACDxC,OAAA,CAACZ,IAAI;QAAC4C,KAAK,EAAEC,MAAM,CAAC0C,cAAe;QAAAxC,QAAA,GACjCnC,OAAA,CAACX,IAAI;UAAC2C,KAAK,EAAEC,MAAM,CAAC2C,KAAM;UAAAzC,QAAA,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EAC1DxC,OAAA,CAACF,aAAa;UACZ+E,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE;UAChCC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK;YAAA,OACrBzD,oBAAoB,CAAC,UAAC0D,SAAS;cAAA,OAAAC,aAAA,CAAAA,aAAA,KAC1BD,SAAS;gBACZ9D,aAAa,EAAE6D;cAAK;YAAA,CACpB,CAAC;UAAA,CACJ;UACDG,SAAS,EAAElD,MAAM,CAACmD,YAAa;UAC/BC,aAAa,EAAEpD,MAAM,CAACoD;QAAc;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACrC,CAAC,EACDlB,iBAAiB,CAACH,aAAa,KAAK,MAAM,IACzCnB,OAAA,CAACP,SAAS;UACRkC,IAAI,EAAE;YACJuB,MAAM,EAAEQ,aAAa;YACrB4B,QAAQ,EAAE,CAAC;cAAE3D,IAAI,EAAEgC;YAAY,CAAC;UAClC,CAAE;UACF4B,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZC,UAAU,EAAC,GAAG;UACd5B,WAAW,EAAEA,WAAY;UACzB+B,MAAM;UACN5D,KAAK,EAAE;YACL6D,cAAc,EAAE,CAAC;YACjBrB,YAAY,EAAE;UAChB;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACH,CACF,EACAlB,iBAAiB,CAACH,aAAa,KAAK,KAAK,IACxCnB,OAAA,CAACN,QAAQ;UACPiC,IAAI,EAAE;YACJuB,MAAM,EAAEQ,aAAa;YACrB4B,QAAQ,EAAE,CAAC;cAAE3D,IAAI,EAAEgC;YAAY,CAAC;UAClC,CAAE;UACF4B,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZC,UAAU,EAAC,GAAG;UACd5B,WAAW,EAAEA,WAAY;UACzB7B,KAAK,EAAE;YACL6D,cAAc,EAAE,CAAC;YACjBrB,YAAY,EAAE;UAChB;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACH,CACF,EACAlB,iBAAiB,CAACH,aAAa,KAAK,KAAK,IACxCnB,OAAA,CAAAE,SAAA;UAAAiC,QAAA,GACEnC,OAAA,CAACL,QAAQ;YACPgC,IAAI,EAAE+B,aAAa,CAACL,GAAG,CAAC,UAACC,KAAK,EAAEyB,KAAK;cAAA,OAAM;gBACzCvB,IAAI,EAAEF,KAAK;gBACXwC,UAAU,EAAEnC,WAAW,CAACoB,KAAK,CAAC;gBAC9Bb,KAAK,EAAG,QAAO6B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAE,KAAIF,IAAI,CAACC,KAAK,CAC3DD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAClB,CAAE,KAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAE,MAAK;gBAC3CC,eAAe,EAAE,SAAS;gBAC1BC,cAAc,EAAE;cAClB,CAAC;YAAA,CAAC,CAAE;YACJZ,KAAK,EAAEhG,UAAU,CAACiC,GAAG,CAAC,QAAQ,CAAC,CAAC+D,KAAK,GAAG,EAAG;YAC3CC,MAAM,EAAE,GAAI;YACZ3B,WAAW,EAAEA,WAAY;YACzBuC,QAAQ,EAAC,YAAY;YACrBtC,eAAe,EAAC,aAAa;YAC7BuC,WAAW,EAAC,IAAI;YAChBC,QAAQ;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACT,CAAC,EACFxC,OAAA,CAACF,aAAa;YACZ+E,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE;YAChCC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK;cAAA,OACrBzD,oBAAoB,CAAC,UAAC0D,SAAS;gBAAA,OAAAC,aAAA,CAAAA,aAAA,KAC1BD,SAAS;kBACZ9D,aAAa,EAAE6D;gBAAK;cAAA,CACpB,CAAC;YAAA,CACJ;YACDG,SAAS,EAAElD,MAAM,CAACmD,YAAa;YAC/BC,aAAa,EAAEpD,MAAM,CAACoD;UAAc;YAAAjD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACrC,CAAC;QAAA,eACF,CACH;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACG,CAAC,EACPxC,OAAA,CAACZ,IAAI;QAAC4C,KAAK,EAAEC,MAAM,CAAC0C,cAAe;QAAAxC,QAAA,GACjCnC,OAAA,CAACX,IAAI;UAAC2C,KAAK,EAAEC,MAAM,CAAC2C,KAAM;UAAAzC,QAAA,EAAC;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC,EAC3DxC,OAAA,CAACF,aAAa;UACZ+E,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE;UAChCC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK;YAAA,OACrBzD,oBAAoB,CAAC,UAAC0D,SAAS;cAAA,OAAAC,aAAA,CAAAA,aAAA,KAC1BD,SAAS;gBACZ7D,UAAU,EAAE4D;cAAK;YAAA,CACjB,CAAC;UAAA,CACJ;UACDG,SAAS,EAAElD,MAAM,CAACmD,YAAa;UAC/BC,aAAa,EAAEpD,MAAM,CAACoD;QAAc;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACrC,CAAC,EACDlB,iBAAiB,CAACF,UAAU,KAAK,MAAM,IACtCpB,OAAA,CAACP,SAAS;UACRkC,IAAI,EAAE;YACJuB,MAAM,EAAEA,MAAM;YACdoC,QAAQ,EAAE,CAAC;cAAE3D,IAAI,EAAEiC;YAAoB,CAAC;UAC1C,CAAE;UACF2B,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZC,UAAU,EAAC,GAAG;UACd5B,WAAW,EAAEA,WAAY;UACzB+B,MAAM;UACN5D,KAAK,EAAE;YACL6D,cAAc,EAAE,CAAC;YACjBrB,YAAY,EAAE;UAChB;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACH,CACF,EACAlB,iBAAiB,CAACF,UAAU,KAAK,KAAK,IACrCpB,OAAA,CAACN,QAAQ;UACPiC,IAAI,EAAE;YACJuB,MAAM,EAAEA,MAAM;YACdoC,QAAQ,EAAE,CAAC;cAAE3D,IAAI,EAAEiC;YAAoB,CAAC;UAC1C,CAAE;UACF2B,KAAK,EAAE,GAAI;UACXC,MAAM,EAAE,GAAI;UACZC,UAAU,EAAC,GAAG;UACd5B,WAAW,EAAEA,WAAY;UACzB7B,KAAK,EAAE;YACL6D,cAAc,EAAE,CAAC;YACjBrB,YAAY,EAAE;UAChB;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KACH,CACF,EACAlB,iBAAiB,CAACF,UAAU,KAAK,KAAK,IACrCpB,OAAA,CAAAE,SAAA;UAAAiC,QAAA,GACEnC,OAAA,CAACL,QAAQ;YACPgC,IAAI,EAAEuB,MAAM,CAACG,GAAG,CAAC,UAACC,KAAK,EAAEyB,KAAK;cAAA,OAAM;gBAClCvB,IAAI,EAAEF,KAAK;gBACXwC,UAAU,EAAElC,mBAAmB,CAACmB,KAAK,CAAC;gBACtCb,KAAK,EAAG,QAAO6B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAE,KAAIF,IAAI,CAACC,KAAK,CAC3DD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAClB,CAAE,KAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAE,MAAK;gBAC3CC,eAAe,EAAE,SAAS;gBAC1BC,cAAc,EAAE;cAClB,CAAC;YAAA,CAAC,CAAE;YACJZ,KAAK,EAAEhG,UAAU,CAACiC,GAAG,CAAC,QAAQ,CAAC,CAAC+D,KAAK,GAAG,EAAG;YAC3CC,MAAM,EAAE,GAAI;YACZ3B,WAAW,EAAEA,WAAY;YACzBuC,QAAQ,EAAC,YAAY;YACrBtC,eAAe,EAAC,aAAa;YAC7BuC,WAAW,EAAC,IAAI;YAChBC,QAAQ;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACT,CAAC,EACFxC,OAAA,CAACF,aAAa;YACZ+E,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE;YAChCC,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAEC,KAAK;cAAA,OACrBzD,oBAAoB,CAAC,UAAC0D,SAAS;gBAAA,OAAAC,aAAA,CAAAA,aAAA,KAC1BD,SAAS;kBACZ7D,UAAU,EAAE4D;gBAAK;cAAA,CACjB,CAAC;YAAA,CACJ;YACDG,SAAS,EAAElD,MAAM,CAACmD,YAAa;YAC/BC,aAAa,EAAEpD,MAAM,CAACoD;UAAc;YAAAjD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACrC,CAAC;QAAA,eACF,CACH;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACG,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACH;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACG,CAAC;AAEjB,CAAC;AAED,IAAMP,MAAM,GAAG3C,UAAU,CAACiH,MAAM,CAAC;EAC/BrE,SAAS,EAAE;IACTsE,IAAI,EAAE,CAAC;IACP1C,eAAe,EAAE,MAAM;IACvB2C,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDhC,eAAe,EAAE;IACfiC,QAAQ,EAAE;EACZ,CAAC;EACDhC,cAAc,EAAE;IACdiC,YAAY,EAAE;EAChB,CAAC;EACDhC,KAAK,EAAE;IACLiC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBF,YAAY,EAAE;EAChB,CAAC;EACDxB,YAAY,EAAE;IACZ2B,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXF,SAAS,EAAE;EACb,CAAC;EACDzB,aAAa,EAAE;IACbE,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXhB,YAAY,EAAE,CAAC;IACfyC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAe/G,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}