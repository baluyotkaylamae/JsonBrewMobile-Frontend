{"ast":null,"code":"var _jsxFileName = \"C:\\\\JsonMobile\\\\frontend\\\\node_modules\\\\react-native-toast-message\\\\lib\\\\src\\\\contexts\\\\LoggerContext.js\";\nimport React from 'react';\nimport { noop } from '../utils/func';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LoggerContext = React.createContext({\n  log: noop\n});\nfunction LoggerProvider(_ref) {\n  var children = _ref.children,\n    _ref$enableLogs = _ref.enableLogs,\n    enableLogs = _ref$enableLogs === void 0 ? false : _ref$enableLogs;\n  var log = React.useCallback(function () {\n    if (enableLogs) {\n      var _console;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_console = console).log.apply(_console, ['Toast:'].concat(args));\n    }\n  }, [enableLogs]);\n  var value = {\n    log: log\n  };\n  return _jsxDEV(LoggerContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n}\nfunction useLogger() {\n  var ctx = React.useContext(LoggerContext);\n  return ctx;\n}\nexport { LoggerProvider, useLogger };","map":{"version":3,"names":["React","noop","jsxDEV","_jsxDEV","LoggerContext","createContext","log","LoggerProvider","_ref","children","_ref$enableLogs","enableLogs","useCallback","_console","_len","arguments","length","args","Array","_key","console","apply","concat","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","useLogger","ctx","useContext"],"sources":["C:/JsonMobile/frontend/node_modules/react-native-toast-message/lib/src/contexts/LoggerContext.js"],"sourcesContent":["import React from 'react';\r\nimport { noop } from '../utils/func';\r\nconst LoggerContext = React.createContext({\r\n    log: noop\r\n});\r\nfunction LoggerProvider({ children, enableLogs = false }) {\r\n    const log = React.useCallback((...args) => {\r\n        if (enableLogs) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('Toast:', ...args);\r\n        }\r\n    }, [enableLogs]);\r\n    const value = {\r\n        log\r\n    };\r\n    return (<LoggerContext.Provider value={value}>{children}</LoggerContext.Provider>);\r\n}\r\nfunction useLogger() {\r\n    const ctx = React.useContext(LoggerContext);\r\n    return ctx;\r\n}\r\nexport { LoggerProvider, useLogger };\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrC,IAAMC,aAAa,GAAGJ,KAAK,CAACK,aAAa,CAAC;EACtCC,GAAG,EAAEL;AACT,CAAC,CAAC;AACF,SAASM,cAAcA,CAAAC,IAAA,EAAmC;EAAA,IAAhCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,eAAA,GAAAF,IAAA,CAAEG,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,KAAK,GAAAA,eAAA;EAClD,IAAMJ,GAAG,GAAGN,KAAK,CAACY,WAAW,CAAC,YAAa;IACvC,IAAID,UAAU,EAAE;MAAA,IAAAE,QAAA;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADcC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAG9B,CAAAN,QAAA,GAAAO,OAAO,EAACd,GAAG,CAAAe,KAAA,CAAAR,QAAA,GAAC,QAAQ,EAAAS,MAAA,CAAKL,IAAI,EAAC;IAClC;EACJ,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAChB,IAAMY,KAAK,GAAG;IACVjB,GAAG,EAAHA;EACJ,CAAC;EACD,OAAQH,OAAA,CAACC,aAAa,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAd,QAAA,EAAEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAyB,CAAC;AACrF;AACA,SAASC,SAASA,CAAA,EAAG;EACjB,IAAMC,GAAG,GAAG9B,KAAK,CAAC+B,UAAU,CAAC3B,aAAa,CAAC;EAC3C,OAAO0B,GAAG;AACd;AACA,SAASvB,cAAc,EAAEsB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}