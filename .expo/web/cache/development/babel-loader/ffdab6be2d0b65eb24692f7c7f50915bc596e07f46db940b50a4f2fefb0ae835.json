{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tabBar\", \"state\", \"navigation\", \"descriptors\", \"sceneContainerStyle\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { CommonActions, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { TabView } from 'react-native-tab-view';\nimport MaterialTopTabBar from './MaterialTopTabBar';\nexport default function MaterialTopTabView(_ref) {\n  var _ref$tabBar = _ref.tabBar,\n    tabBar = _ref$tabBar === void 0 ? function (props) {\n      return React.createElement(MaterialTopTabBar, props);\n    } : _ref$tabBar,\n    state = _ref.state,\n    navigation = _ref.navigation,\n    descriptors = _ref.descriptors,\n    sceneContainerStyle = _ref.sceneContainerStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var renderTabBar = function renderTabBar(props) {\n    return tabBar(_objectSpread(_objectSpread({}, props), {}, {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    }));\n  };\n  var focusedOptions = descriptors[state.routes[state.index].key].options;\n  return React.createElement(TabView, _extends({}, rest, {\n    onIndexChange: function onIndexChange(index) {\n      return navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate({\n        name: state.routes[index].name,\n        merge: true\n      })), {}, {\n        target: state.key\n      }));\n    },\n    renderScene: function renderScene(_ref2) {\n      var route = _ref2.route;\n      return descriptors[route.key].render();\n    },\n    navigationState: state,\n    renderTabBar: renderTabBar,\n    renderLazyPlaceholder: function renderLazyPlaceholder(_ref3) {\n      var _ref5;\n      var _descriptors$route$ke, _descriptors$route$ke2;\n      var route = _ref3.route;\n      return (_ref5 = (_descriptors$route$ke = (_descriptors$route$ke2 = descriptors[route.key].options).lazyPlaceholder) === null || _descriptors$route$ke === void 0 ? void 0 : _descriptors$route$ke.call(_descriptors$route$ke2)) != null ? _ref5 : null;\n    },\n    lazy: function lazy(_ref4) {\n      var route = _ref4.route;\n      return descriptors[route.key].options.lazy === true;\n    },\n    lazyPreloadDistance: focusedOptions.lazyPreloadDistance,\n    swipeEnabled: focusedOptions.swipeEnabled,\n    animationEnabled: focusedOptions.animationEnabled,\n    onSwipeStart: function onSwipeStart() {\n      return navigation.emit({\n        type: 'swipeStart'\n      });\n    },\n    onSwipeEnd: function onSwipeEnd() {\n      return navigation.emit({\n        type: 'swipeEnd'\n      });\n    },\n    sceneContainerStyle: [{\n      backgroundColor: colors.background\n    }, sceneContainerStyle]\n  }));\n}","map":{"version":3,"names":["CommonActions","useTheme","React","TabView","MaterialTopTabBar","MaterialTopTabView","_ref","_ref$tabBar","tabBar","props","createElement","state","navigation","descriptors","sceneContainerStyle","rest","_objectWithoutProperties","_excluded","_useTheme","colors","renderTabBar","_objectSpread","focusedOptions","routes","index","key","options","_extends","onIndexChange","dispatch","navigate","name","merge","target","renderScene","_ref2","route","render","navigationState","renderLazyPlaceholder","_ref3","_ref5","_descriptors$route$ke","_descriptors$route$ke2","lazyPlaceholder","call","lazy","_ref4","lazyPreloadDistance","swipeEnabled","animationEnabled","onSwipeStart","emit","type","onSwipeEnd","backgroundColor","background"],"sources":["C:\\JsonMobile\\frontend\\node_modules\\@react-navigation\\material-top-tabs\\src\\views\\MaterialTopTabView.tsx"],"sourcesContent":["import {\r\n  CommonActions,\r\n  ParamListBase,\r\n  Route,\r\n  TabNavigationState,\r\n  useTheme,\r\n} from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { SceneRendererProps, TabView } from 'react-native-tab-view';\r\n\r\nimport type {\r\n  MaterialTopTabBarProps,\r\n  MaterialTopTabDescriptorMap,\r\n  MaterialTopTabNavigationConfig,\r\n  MaterialTopTabNavigationHelpers,\r\n} from '../types';\r\nimport MaterialTopTabBar from './MaterialTopTabBar';\r\n\r\ntype Props = MaterialTopTabNavigationConfig & {\r\n  state: TabNavigationState<ParamListBase>;\r\n  navigation: MaterialTopTabNavigationHelpers;\r\n  descriptors: MaterialTopTabDescriptorMap;\r\n};\r\n\r\nexport default function MaterialTopTabView({\r\n  tabBar = (props: MaterialTopTabBarProps) => <MaterialTopTabBar {...props} />,\r\n  state,\r\n  navigation,\r\n  descriptors,\r\n  sceneContainerStyle,\r\n  ...rest\r\n}: Props) {\r\n  const { colors } = useTheme();\r\n\r\n  const renderTabBar = (props: SceneRendererProps) => {\r\n    return tabBar({\r\n      ...props,\r\n      state: state,\r\n      navigation: navigation,\r\n      descriptors: descriptors,\r\n    });\r\n  };\r\n\r\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\r\n\r\n  return (\r\n    <TabView<Route<string>>\r\n      {...rest}\r\n      onIndexChange={(index) =>\r\n        navigation.dispatch({\r\n          ...CommonActions.navigate({\r\n            name: state.routes[index].name,\r\n            merge: true,\r\n          }),\r\n          target: state.key,\r\n        })\r\n      }\r\n      renderScene={({ route }) => descriptors[route.key].render()}\r\n      navigationState={state}\r\n      renderTabBar={renderTabBar}\r\n      renderLazyPlaceholder={({ route }) =>\r\n        descriptors[route.key].options.lazyPlaceholder?.() ?? null\r\n      }\r\n      lazy={({ route }) => descriptors[route.key].options.lazy === true}\r\n      lazyPreloadDistance={focusedOptions.lazyPreloadDistance}\r\n      swipeEnabled={focusedOptions.swipeEnabled}\r\n      animationEnabled={focusedOptions.animationEnabled}\r\n      onSwipeStart={() => navigation.emit({ type: 'swipeStart' })}\r\n      onSwipeEnd={() => navigation.emit({ type: 'swipeEnd' })}\r\n      sceneContainerStyle={[\r\n        { backgroundColor: colors.background },\r\n        sceneContainerStyle,\r\n      ]}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}