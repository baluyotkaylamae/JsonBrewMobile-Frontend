{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { ExecutionEnvironment } from './Constants.types';\nvar ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\nvar _sessionId = (Date.now() + '-' + Math.floor(Math.random() * 1000000000)).toString();\nfunction getBrowserName() {\n  if (typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string') {\n    var agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n  return undefined;\n}\nexport default {\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get installationId() {\n    var installationId;\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = (Date.now() + '-' + Math.floor(Math.random() * 1000000000)).toString();\n        localStorage.setItem(ID_KEY, installationId);\n      }\n    } catch (_unused) {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n  get sessionId() {\n    return _sessionId;\n  },\n  get platform() {\n    return {\n      web: typeof navigator !== 'undefined' ? {\n        ua: navigator.userAgent\n      } : undefined\n    };\n  },\n  get isHeadless() {\n    if (typeof navigator === 'undefined') return true;\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n  get isDevice() {\n    return true;\n  },\n  get expoVersion() {\n    return this.manifest.sdkVersion || null;\n  },\n  get linkingUri() {\n    if (typeof location !== 'undefined') {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion() {\n    return this.expoVersion;\n  },\n  get deviceName() {\n    return getBrowserName();\n  },\n  get nativeAppVersion() {\n    return null;\n  },\n  get nativeBuildVersion() {\n    return null;\n  },\n  get systemFonts() {\n    return [];\n  },\n  get statusBarHeight() {\n    return 0;\n  },\n  get deviceYearClass() {\n    return null;\n  },\n  get manifest() {\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2() {\n    return null;\n  },\n  get experienceUrl() {\n    if (typeof location !== 'undefined') {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode() {\n    return __DEV__;\n  },\n  getWebViewUserAgentAsync: function () {\n    var _getWebViewUserAgentAsync = _asyncToGenerator(function* () {\n      if (typeof navigator !== 'undefined') {\n        return navigator.userAgent;\n      } else {\n        return null;\n      }\n    });\n    function getWebViewUserAgentAsync() {\n      return _getWebViewUserAgentAsync.apply(this, arguments);\n    }\n    return getWebViewUserAgentAsync;\n  }()\n};","map":{"version":3,"names":["ExecutionEnvironment","ID_KEY","_sessionId","Date","now","Math","floor","random","toString","getBrowserName","navigator","userAgent","agent","toLowerCase","includes","window","undefined","appOwnership","executionEnvironment","Bare","installationId","localStorage","getItem","setItem","_unused","sessionId","platform","web","ua","isHeadless","test","isDevice","expoVersion","manifest","sdkVersion","linkingUri","location","origin","expoRuntimeVersion","deviceName","nativeAppVersion","nativeBuildVersion","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","manifest2","experienceUrl","debugMode","__DEV__","getWebViewUserAgentAsync","_getWebViewUserAgentAsync","_asyncToGenerator","apply","arguments"],"sources":["C:\\JsonMobile\\frontend\\node_modules\\expo-constants\\src\\ExponentConstants.web.ts"],"sourcesContent":["import {\n  ExecutionEnvironment,\n  NativeConstants,\n  PlatformManifest,\n  WebManifest,\n} from './Constants.types';\n\nconst ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\n\ndeclare let __DEV__: boolean;\ndeclare let process: { env: any };\ndeclare let navigator: Navigator;\ndeclare let location: Location;\ndeclare let localStorage: Storage;\n\nconst _sessionId = (Date.now() + '-' + Math.floor(Math.random() * 1000000000)).toString();\n\nfunction getBrowserName(): string | undefined {\n  if (typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string') {\n    const agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get installationId(): string {\n    let installationId;\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = (Date.now() + '-' + Math.floor(Math.random() * 1000000000)).toString();\n        localStorage.setItem(ID_KEY, installationId as string);\n      }\n    } catch {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n  get sessionId(): string {\n    return _sessionId;\n  },\n  get platform(): PlatformManifest {\n    return { web: typeof navigator !== 'undefined' ? { ua: navigator.userAgent } : undefined };\n  },\n  get isHeadless(): boolean {\n    if (typeof navigator === 'undefined') return true;\n\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n  get isDevice(): true {\n    // TODO: Bacon: Possibly want to add information regarding simulators\n    return true;\n  },\n  get expoVersion(): string | null {\n    return (this.manifest as any)!.sdkVersion || null;\n  },\n  get linkingUri(): string {\n    if (typeof location !== 'undefined') {\n      // On native this is `exp://`\n      // On web we should use the protocol and hostname (location.origin)\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion(): string | null {\n    return this.expoVersion;\n  },\n  get deviceName(): string | undefined {\n    return getBrowserName();\n  },\n  get nativeAppVersion(): null {\n    return null;\n  },\n  get nativeBuildVersion(): null {\n    return null;\n  },\n  get systemFonts(): string[] {\n    // TODO: Bacon: Maybe possible.\n    return [];\n  },\n  get statusBarHeight(): number {\n    return 0;\n  },\n  get deviceYearClass(): number | null {\n    // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n    return null;\n  },\n  get manifest(): WebManifest {\n    // This is defined by @expo/webpack-config or babel-preset-expo.\n    // If your site is bundled with a different config then you may not have access to the app.json automatically.\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2(): null {\n    return null;\n  },\n  get experienceUrl(): string {\n    if (typeof location !== 'undefined') {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode(): boolean {\n    return __DEV__;\n  },\n  async getWebViewUserAgentAsync(): Promise<string | null> {\n    if (typeof navigator !== 'undefined') {\n      return navigator.userAgent;\n    } else {\n      return null;\n    }\n  },\n} as NativeConstants;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}