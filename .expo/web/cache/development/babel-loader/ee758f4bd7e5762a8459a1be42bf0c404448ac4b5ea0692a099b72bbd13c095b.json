{"ast":null,"code":"export var MD3TypescaleKey = function (MD3TypescaleKey) {\n  MD3TypescaleKey[\"displayLarge\"] = \"displayLarge\";\n  MD3TypescaleKey[\"displayMedium\"] = \"displayMedium\";\n  MD3TypescaleKey[\"displaySmall\"] = \"displaySmall\";\n  MD3TypescaleKey[\"headlineLarge\"] = \"headlineLarge\";\n  MD3TypescaleKey[\"headlineMedium\"] = \"headlineMedium\";\n  MD3TypescaleKey[\"headlineSmall\"] = \"headlineSmall\";\n  MD3TypescaleKey[\"titleLarge\"] = \"titleLarge\";\n  MD3TypescaleKey[\"titleMedium\"] = \"titleMedium\";\n  MD3TypescaleKey[\"titleSmall\"] = \"titleSmall\";\n  MD3TypescaleKey[\"labelLarge\"] = \"labelLarge\";\n  MD3TypescaleKey[\"labelMedium\"] = \"labelMedium\";\n  MD3TypescaleKey[\"labelSmall\"] = \"labelSmall\";\n  MD3TypescaleKey[\"bodyLarge\"] = \"bodyLarge\";\n  MD3TypescaleKey[\"bodyMedium\"] = \"bodyMedium\";\n  MD3TypescaleKey[\"bodySmall\"] = \"bodySmall\";\n  return MD3TypescaleKey;\n}({});\nexport var ElevationLevels = function (ElevationLevels) {\n  ElevationLevels[ElevationLevels[\"level0\"] = 0] = \"level0\";\n  ElevationLevels[ElevationLevels[\"level1\"] = 1] = \"level1\";\n  ElevationLevels[ElevationLevels[\"level2\"] = 2] = \"level2\";\n  ElevationLevels[ElevationLevels[\"level3\"] = 3] = \"level3\";\n  ElevationLevels[ElevationLevels[\"level4\"] = 4] = \"level4\";\n  ElevationLevels[ElevationLevels[\"level5\"] = 5] = \"level5\";\n  return ElevationLevels;\n}({});","map":{"version":3,"names":["MD3TypescaleKey","ElevationLevels"],"sources":["C:\\JsonMobile\\frontend\\node_modules\\react-native-paper\\src\\types.tsx"],"sourcesContent":["import type * as React from 'react';\r\n\r\nimport type { $DeepPartial } from '@callstack/react-theme-provider';\r\n\r\nexport type Font = {\r\n  fontFamily: string;\r\n  fontWeight?:\r\n    | 'normal'\r\n    | 'bold'\r\n    | '100'\r\n    | '200'\r\n    | '300'\r\n    | '400'\r\n    | '500'\r\n    | '600'\r\n    | '700'\r\n    | '800'\r\n    | '900';\r\n  fontStyle?: 'normal' | 'italic' | undefined;\r\n};\r\n\r\nexport type Fonts = {\r\n  regular: Font;\r\n  medium: Font;\r\n  light: Font;\r\n  thin: Font;\r\n};\r\n\r\ntype Mode = 'adaptive' | 'exact';\r\n\r\nexport type MD2Colors = {\r\n  primary: string;\r\n  background: string;\r\n  surface: string;\r\n  accent: string;\r\n  error: string;\r\n  text: string;\r\n  onSurface: string;\r\n  disabled: string;\r\n  placeholder: string;\r\n  backdrop: string;\r\n  notification: string;\r\n  tooltip: string;\r\n};\r\n\r\nexport type MD3Colors = {\r\n  primary: string;\r\n  primaryContainer: string;\r\n  secondary: string;\r\n  secondaryContainer: string;\r\n  tertiary: string;\r\n  tertiaryContainer: string;\r\n  surface: string;\r\n  surfaceVariant: string;\r\n  surfaceDisabled: string;\r\n  background: string;\r\n  error: string;\r\n  errorContainer: string;\r\n  onPrimary: string;\r\n  onPrimaryContainer: string;\r\n  onSecondary: string;\r\n  onSecondaryContainer: string;\r\n  onTertiary: string;\r\n  onTertiaryContainer: string;\r\n  onSurface: string;\r\n  onSurfaceVariant: string;\r\n  onSurfaceDisabled: string;\r\n  onError: string;\r\n  onErrorContainer: string;\r\n  onBackground: string;\r\n  outline: string;\r\n  outlineVariant: string;\r\n  inverseSurface: string;\r\n  inverseOnSurface: string;\r\n  inversePrimary: string;\r\n  shadow: string;\r\n  scrim: string;\r\n  backdrop: string;\r\n  elevation: MD3ElevationColors;\r\n};\r\n\r\nexport type MD3AndroidColors = {\r\n  primary: number;\r\n  primaryContainer: number;\r\n  secondary: number;\r\n  secondaryContainer: number;\r\n  tertiary: number;\r\n  tertiaryContainer: number;\r\n  surface: number;\r\n  surfaceVariant: number;\r\n  background: number;\r\n  error: number;\r\n  errorContainer: number;\r\n  onPrimary: number;\r\n  onPrimaryContainer: number;\r\n  onSecondary: number;\r\n  onSecondaryContainer: number;\r\n  onTertiary: number;\r\n  onTertiaryContainer: number;\r\n  onSurface: number;\r\n  onSurfaceVariant: number;\r\n  onError: number;\r\n  onErrorContainer: number;\r\n  onBackground: number;\r\n  outline: number;\r\n  outlineVariant: number;\r\n  inverseSurface: number;\r\n  inverseOnSurface: number;\r\n  inversePrimary: number;\r\n  shadow: number;\r\n  scrim: number;\r\n};\r\n\r\nexport type MD3Palette = {};\r\n\r\nexport type ThemeProp = $DeepPartial<InternalTheme>;\r\n\r\nexport type ThemeBase = {\r\n  dark: boolean;\r\n  mode?: Mode;\r\n  roundness: number;\r\n  animation: {\r\n    scale: number;\r\n    defaultAnimationDuration?: number;\r\n  };\r\n};\r\n\r\nexport type MD3Theme = ThemeBase & {\r\n  version: 3;\r\n  isV3: true;\r\n  colors: MD3Colors;\r\n  fonts: MD3Typescale;\r\n};\r\n\r\nexport type MD2Theme = ThemeBase & {\r\n  version: 2;\r\n  isV3: false;\r\n  colors: MD2Colors;\r\n  fonts: Fonts;\r\n};\r\n\r\nexport type InternalTheme = MD2Theme | MD3Theme;\r\n\r\n// MD3 types\r\nexport enum MD3TypescaleKey {\r\n  displayLarge = 'displayLarge',\r\n  displayMedium = 'displayMedium',\r\n  displaySmall = 'displaySmall',\r\n\r\n  headlineLarge = 'headlineLarge',\r\n  headlineMedium = 'headlineMedium',\r\n  headlineSmall = 'headlineSmall',\r\n\r\n  titleLarge = 'titleLarge',\r\n  titleMedium = 'titleMedium',\r\n  titleSmall = 'titleSmall',\r\n\r\n  labelLarge = 'labelLarge',\r\n  labelMedium = 'labelMedium',\r\n  labelSmall = 'labelSmall',\r\n\r\n  bodyLarge = 'bodyLarge',\r\n  bodyMedium = 'bodyMedium',\r\n  bodySmall = 'bodySmall',\r\n}\r\n\r\nexport type MD3Type = {\r\n  fontFamily: string;\r\n  letterSpacing: number;\r\n  fontWeight: Font['fontWeight'];\r\n  lineHeight: number;\r\n  fontSize: number;\r\n  fontStyle?: Font['fontStyle'];\r\n};\r\n\r\nexport type MD3Typescale =\r\n  | {\r\n      [key in MD3TypescaleKey]: MD3Type;\r\n    } & {\r\n      ['default']: Omit<MD3Type, 'lineHeight' | 'fontSize'>;\r\n    };\r\n\r\nexport type MD3Elevation = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\nexport enum ElevationLevels {\r\n  'level0',\r\n  'level1',\r\n  'level2',\r\n  'level3',\r\n  'level4',\r\n  'level5',\r\n}\r\n\r\nexport type MD3ElevationColors = {\r\n  [key in keyof typeof ElevationLevels]: string;\r\n};\r\n\r\nexport type $Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\r\nexport type $RemoveChildren<T extends React.ComponentType<any>> = $Omit<\r\n  React.ComponentPropsWithoutRef<T>,\r\n  'children'\r\n>;\r\n\r\nexport type EllipsizeProp = 'head' | 'middle' | 'tail' | 'clip';\r\n\r\nexport type NavigationTheme = {\r\n  dark: boolean;\r\n  colors: {\r\n    primary: string;\r\n    background: string;\r\n    card: string;\r\n    text: string;\r\n    border: string;\r\n    notification: string;\r\n  };\r\n};\r\n"],"mappings":"AAgJA,WAAYA,eAAe,aAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAwC3B,WAAYC,eAAe,aAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}