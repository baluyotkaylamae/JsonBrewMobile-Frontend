{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getContentMaxWidth, getMenuItemColor, MAX_WIDTH, MIN_WIDTH } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nvar MenuItem = function MenuItem(_ref) {\n  var leadingIcon = _ref.leadingIcon,\n    trailingIcon = _ref.trailingIcon,\n    dense = _ref.dense,\n    title = _ref.title,\n    disabled = _ref.disabled,\n    background = _ref.background,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    contentStyle = _ref.contentStyle,\n    titleStyle = _ref.titleStyle,\n    customRippleColor = _ref.rippleColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'menu-item' : _ref$testID,\n    accessibilityLabel = _ref.accessibilityLabel,\n    accessibilityState = _ref.accessibilityState,\n    themeOverrides = _ref.theme,\n    _ref$titleMaxFontSize = _ref.titleMaxFontSizeMultiplier,\n    titleMaxFontSizeMultiplier = _ref$titleMaxFontSize === void 0 ? 1.5 : _ref$titleMaxFontSize;\n  var theme = useInternalTheme(themeOverrides);\n  var _getMenuItemColor = getMenuItemColor({\n      theme: theme,\n      disabled: disabled,\n      customRippleColor: customRippleColor\n    }),\n    titleColor = _getMenuItemColor.titleColor,\n    iconColor = _getMenuItemColor.iconColor,\n    rippleColor = _getMenuItemColor.rippleColor;\n  var isV3 = theme.isV3;\n  var containerPadding = isV3 ? 12 : 8;\n  var iconWidth = isV3 ? 24 : 40;\n  var minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n  var maxWidth = getContentMaxWidth({\n    isV3: isV3,\n    iconWidth: iconWidth,\n    leadingIcon: leadingIcon,\n    trailingIcon: trailingIcon\n  });\n  var titleTextStyle = _objectSpread({\n    color: titleColor\n  }, isV3 ? theme.fonts.bodyLarge : {});\n  var newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled: disabled\n  });\n  return React.createElement(TouchableRipple, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    background: background,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: newAccessibilityState,\n    rippleColor: rippleColor\n  }, React.createElement(View, {\n    style: styles.row\n  }, leadingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(Text, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    testID: `${testID}-title`,\n    style: [!isV3 && styles.title, titleTextStyle, titleStyle],\n    maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n  }, title)), isV3 && trailingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\nMenuItem.displayName = 'Menu.Item';\nvar styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\nexport default MenuItem;","map":{"version":3,"names":["React","StyleSheet","View","getContentMaxWidth","getMenuItemColor","MAX_WIDTH","MIN_WIDTH","useInternalTheme","Icon","TouchableRipple","Text","MenuItem","_ref","leadingIcon","trailingIcon","dense","title","disabled","background","onPress","style","contentStyle","titleStyle","customRippleColor","rippleColor","_ref$testID","testID","accessibilityLabel","accessibilityState","themeOverrides","theme","_ref$titleMaxFontSize","titleMaxFontSizeMultiplier","_getMenuItemColor","titleColor","iconColor","isV3","containerPadding","iconWidth","minWidth","maxWidth","titleTextStyle","_objectSpread","color","fonts","bodyLarge","newAccessibilityState","createElement","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","row","item","width","pointerEvents","source","size","content","md3LeadingIcon","md3WithoutLeadingIcon","variant","selectable","numberOfLines","maxFontSizeMultiplier","displayName","create","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft"],"sources":["C:\\JsonMobile\\frontend\\node_modules\\react-native-paper\\src\\components\\Menu\\MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  AccessibilityState,\r\n  ColorValue,\r\n  GestureResponderEvent,\r\n  PressableAndroidRippleConfig,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport {\r\n  getContentMaxWidth,\r\n  getMenuItemColor,\r\n  MAX_WIDTH,\r\n  MIN_WIDTH,\r\n} from './utils';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { ThemeProp } from '../../types';\r\nimport Icon, { IconSource } from '../Icon';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\nimport Text from '../Typography/Text';\r\n\r\nexport type Props = {\r\n  /**\r\n   * Title text for the `MenuItem`.\r\n   */\r\n  title: React.ReactNode;\r\n  /**\r\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\r\n   *\r\n   * Leading icon to display for the `MenuItem`.\r\n   */\r\n  leadingIcon?: IconSource;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   *\r\n   * Trailing icon to display for the `MenuItem`.\r\n   */\r\n  trailingIcon?: IconSource;\r\n  /**\r\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   *\r\n   * Sets min height with densed layout.\r\n   */\r\n  dense?: boolean;\r\n  /**\r\n   * Type of background drawabale to display the feedback (Android).\r\n   * https://reactnative.dev/docs/pressable#rippleconfig\r\n   */\r\n  background?: PressableAndroidRippleConfig;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * Specifies the largest possible scale a title font can reach.\r\n   */\r\n  titleMaxFontSizeMultiplier?: number;\r\n  /**\r\n   * @optional\r\n   */\r\n  style?: StyleProp<ViewStyle>;\r\n  contentStyle?: StyleProp<ViewStyle>;\r\n  titleStyle?: StyleProp<TextStyle>;\r\n  /**\r\n   * Color of the ripple effect.\r\n   */\r\n  rippleColor?: ColorValue;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * TestID used for testing purposes\r\n   */\r\n  testID?: string;\r\n  /**\r\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\r\n   */\r\n  accessibilityLabel?: string;\r\n  /**\r\n   * Accessibility state for the Touchable. This is read by the screen reader when the user taps the component.\r\n   */\r\n  accessibilityState?: AccessibilityState;\r\n};\r\n\r\n/**\r\n * A component to show a single list item inside a Menu.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { Menu } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <View style={{ flex: 1 }}>\r\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\r\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\r\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\r\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\r\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\r\n *   </View>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst MenuItem = ({\r\n  leadingIcon,\r\n  trailingIcon,\r\n  dense,\r\n  title,\r\n  disabled,\r\n  background,\r\n  onPress,\r\n  style,\r\n  contentStyle,\r\n  titleStyle,\r\n  rippleColor: customRippleColor,\r\n  testID = 'menu-item',\r\n  accessibilityLabel,\r\n  accessibilityState,\r\n  theme: themeOverrides,\r\n  titleMaxFontSizeMultiplier = 1.5,\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { titleColor, iconColor, rippleColor } = getMenuItemColor({\r\n    theme,\r\n    disabled,\r\n    customRippleColor,\r\n  });\r\n  const { isV3 } = theme;\r\n\r\n  const containerPadding = isV3 ? 12 : 8;\r\n\r\n  const iconWidth = isV3 ? 24 : 40;\r\n\r\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\r\n\r\n  const maxWidth = getContentMaxWidth({\r\n    isV3,\r\n    iconWidth,\r\n    leadingIcon,\r\n    trailingIcon,\r\n  });\r\n\r\n  const titleTextStyle = {\r\n    color: titleColor,\r\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\r\n  };\r\n\r\n  const newAccessibilityState = { ...accessibilityState, disabled };\r\n\r\n  return (\r\n    <TouchableRipple\r\n      style={[\r\n        styles.container,\r\n        { paddingHorizontal: containerPadding },\r\n        dense && styles.md3DenseContainer,\r\n        style,\r\n      ]}\r\n      onPress={onPress}\r\n      disabled={disabled}\r\n      testID={testID}\r\n      background={background}\r\n      accessibilityLabel={accessibilityLabel}\r\n      accessibilityRole=\"menuitem\"\r\n      accessibilityState={newAccessibilityState}\r\n      rippleColor={rippleColor}\r\n    >\r\n      <View style={styles.row}>\r\n        {leadingIcon ? (\r\n          <View\r\n            style={[!isV3 && styles.item, { width: iconWidth }]}\r\n            pointerEvents=\"box-none\"\r\n          >\r\n            <Icon source={leadingIcon} size={24} color={iconColor} />\r\n          </View>\r\n        ) : null}\r\n        <View\r\n          style={[\r\n            !isV3 && styles.item,\r\n            styles.content,\r\n            { minWidth, maxWidth },\r\n            isV3 &&\r\n              (leadingIcon\r\n                ? styles.md3LeadingIcon\r\n                : styles.md3WithoutLeadingIcon),\r\n            contentStyle,\r\n          ]}\r\n          pointerEvents=\"none\"\r\n        >\r\n          <Text\r\n            variant=\"bodyLarge\"\r\n            selectable={false}\r\n            numberOfLines={1}\r\n            testID={`${testID}-title`}\r\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\r\n            maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\r\n          >\r\n            {title}\r\n          </Text>\r\n        </View>\r\n        {isV3 && trailingIcon ? (\r\n          <View\r\n            style={[!isV3 && styles.item, { width: iconWidth }]}\r\n            pointerEvents=\"box-none\"\r\n          >\r\n            <Icon source={trailingIcon} size={24} color={iconColor} />\r\n          </View>\r\n        ) : null}\r\n      </View>\r\n    </TouchableRipple>\r\n  );\r\n};\r\n\r\nMenuItem.displayName = 'Menu.Item';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    minWidth: MIN_WIDTH,\r\n    maxWidth: MAX_WIDTH,\r\n    height: 48,\r\n    justifyContent: 'center',\r\n  },\r\n  md3DenseContainer: {\r\n    height: 32,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n  },\r\n  item: {\r\n    marginHorizontal: 8,\r\n  },\r\n  content: {\r\n    justifyContent: 'center',\r\n  },\r\n  md3LeadingIcon: {\r\n    marginLeft: 12,\r\n  },\r\n  md3WithoutLeadingIcon: {\r\n    marginLeft: 4,\r\n  },\r\n});\r\n\r\nexport default MenuItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}