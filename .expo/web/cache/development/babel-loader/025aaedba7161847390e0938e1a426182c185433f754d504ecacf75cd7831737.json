{"ast":null,"code":"import \"core-js/stable/atob\";\nimport { jwtDecode } from \"jwt-decode\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from \"react-native-toast-message\";\nimport baseURL from \"../../assets/common/baseurl\";\nexport var SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport var loginUser = function loginUser(user, dispatch) {\n  fetch(`${baseURL}users/login`, {\n    method: \"POST\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    if (data) {\n      var token = data.token;\n      AsyncStorage.setItem(\"jwt\", token);\n      var decoded = jwtDecode(token);\n      console.log(\"token\", token);\n      dispatch(setCurrentUser(decoded, user));\n    } else {\n      logoutUser(dispatch);\n    }\n  }).catch(function (err) {\n    Toast.show({\n      topOffset: 60,\n      type: \"error\",\n      text1: \"Please provide correct credentials\",\n      text2: \"\"\n    });\n    console.log(err);\n    logoutUser(dispatch);\n  });\n};\nexport var getUserProfile = function getUserProfile(id) {\n  fetch(`${baseURL}users/${id}`, {\n    method: \"GET\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return console.log(data);\n  });\n};\nexport var logoutUser = function logoutUser(dispatch) {\n  AsyncStorage.removeItem(\"jwt\");\n  dispatch(setCurrentUser({}));\n};\nexport var setCurrentUser = function setCurrentUser(decoded, user) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    userProfile: user\n  };\n};","map":{"version":3,"names":["jwtDecode","AsyncStorage","Toast","baseURL","SET_CURRENT_USER","loginUser","user","dispatch","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","token","setItem","decoded","console","log","setCurrentUser","logoutUser","catch","err","show","topOffset","type","text1","text2","getUserProfile","id","removeItem","payload","userProfile"],"sources":["C:/JsonMobile/frontend/Context/Actions/Auth.actions.js"],"sourcesContent":["import \"core-js/stable/atob\";\r\nimport { jwtDecode } from \"jwt-decode\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport Toast from \"react-native-toast-message\"\r\nimport baseURL from \"../../assets/common/baseurl\"\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const loginUser = (user, dispatch) => {\r\n    \r\n    fetch(`${baseURL}users/login`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        if (data) {\r\n            // console.log(data)\r\n            const token = data.token;\r\n            AsyncStorage.setItem(\"jwt\", token)\r\n            const decoded = jwtDecode(token)\r\n            console.log(\"token\",token)\r\n            dispatch(setCurrentUser(decoded, user))\r\n        } else {\r\n           logoutUser(dispatch)\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        Toast.show({\r\n            topOffset: 60,\r\n            type: \"error\",\r\n            text1: \"Please provide correct credentials\",\r\n            text2: \"\"\r\n        });\r\n        console.log(err)\r\n        logoutUser(dispatch)\r\n    });\r\n};\r\n\r\nexport const getUserProfile = (id) => {\r\n    fetch(`${baseURL}users/${id}`, {\r\n        method: \"GET\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => console.log(data));\r\n}\r\n\r\nexport const logoutUser = (dispatch) => {\r\n    AsyncStorage.removeItem(\"jwt\");\r\n    dispatch(setCurrentUser({}))\r\n}\r\n\r\nexport const setCurrentUser = (decoded, user) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded,\r\n        userProfile: user\r\n    }\r\n}"],"mappings":"AAAA,OAAO,qBAAqB;AAC5B,SAASA,SAAS,QAAQ,YAAY;AACtC,OAAOC,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,OAAO,MAAM,6BAA6B;AAEjD,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAEC,QAAQ,EAAK;EAEzCC,KAAK,CAAE,GAAEL,OAAQ,aAAY,EAAE;IAC3BM,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACDC,IAAI,CAAC,UAACC,GAAG;IAAA,OAAKA,GAAG,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI,EAAK;IACZ,IAAIA,IAAI,EAAE;MAEN,IAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK;MACxBlB,YAAY,CAACmB,OAAO,CAAC,KAAK,EAAED,KAAK,CAAC;MAClC,IAAME,OAAO,GAAGrB,SAAS,CAACmB,KAAK,CAAC;MAChCG,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,KAAK,CAAC;MAC1BZ,QAAQ,CAACiB,cAAc,CAACH,OAAO,EAAEf,IAAI,CAAC,CAAC;IAC3C,CAAC,MAAM;MACJmB,UAAU,CAAClB,QAAQ,CAAC;IACvB;EACJ,CAAC,CAAC,CACDmB,KAAK,CAAC,UAACC,GAAG,EAAK;IACZzB,KAAK,CAAC0B,IAAI,CAAC;MACPC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,oCAAoC;MAC3CC,KAAK,EAAE;IACX,CAAC,CAAC;IACFV,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IAChBF,UAAU,CAAClB,QAAQ,CAAC;EACxB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,IAAM0B,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,EAAE,EAAK;EAClC1B,KAAK,CAAE,GAAEL,OAAQ,SAAQ+B,EAAG,EAAC,EAAE;IAC3BzB,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IAC1BO,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACDC,IAAI,CAAC,UAACC,GAAG;IAAA,OAAKA,GAAG,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI;IAAA,OAAKI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAAA,EAAC;AACtC,CAAC;AAED,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAIlB,QAAQ,EAAK;EACpCN,YAAY,CAACkC,UAAU,CAAC,KAAK,CAAC;EAC9B5B,QAAQ,CAACiB,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAIH,OAAO,EAAEf,IAAI,EAAK;EAC7C,OAAO;IACHwB,IAAI,EAAE1B,gBAAgB;IACtBgC,OAAO,EAAEf,OAAO;IAChBgB,WAAW,EAAE/B;EACjB,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}